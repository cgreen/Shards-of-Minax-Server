using Server;
using Server.Items;

namespace Server.Multis
{
    public class PlainStoneHouseAddon : BaseAddon
    {
        public override BaseAddonDeed Deed => null;
		
		[Constructable]
        public PlainStoneHouseAddon()
        {
            HouseTile[] tiles = new HouseTile[]
            {
				new HouseTile(0x66, -5, -5, 0, 1),
				new HouseTile(0x1D, -5, -5, 5, 1),
				new HouseTile(0x64, -5, -4, 0, 1),
				new HouseTile(0x1B, -5, -4, 5, 1),
				new HouseTile(0x64, -5, -3, 0, 1),
				new HouseTile(0x1B, -5, -3, 5, 1),
				new HouseTile(0x64, -5, -2, 0, 1),
				new HouseTile(0x23, -5, -2, 5, 1),
				new HouseTile(0x64, -5, -1, 0, 1),
				new HouseTile(0x1B, -5, -1, 5, 1),
				new HouseTile(0x64, -5, 0, 0, 1),
				new HouseTile(0x1B, -5, 0, 5, 1),
				new HouseTile(0x64, -5, 1, 0, 1),
				new HouseTile(0x1B, -5, 1, 5, 1),
				new HouseTile(0x64, -5, 2, 0, 1),
				new HouseTile(0x1B, -5, 2, 5, 1),
				new HouseTile(0x64, -5, 3, 0, 1),
				new HouseTile(0x23, -5, 3, 5, 1),
				new HouseTile(0x64, -5, 4, 0, 1),
				new HouseTile(0x1B, -5, 4, 5, 1),
				new HouseTile(0x64, -5, 5, 0, 1),
				new HouseTile(0x20, -5, 5, 5, 1),
				new HouseTile(0x63, -4, -5, 0, 1),
				new HouseTile(0x1C, -4, -5, 5, 1),
				new HouseTile(0x4AB, -4, -4, 5, 1),
				new HouseTile(0x5D0, -4, -4, 25, 1),
				new HouseTile(0x4AC, -4, -3, 5, 1),
				new HouseTile(0x5D0, -4, -3, 28, 1),
				new HouseTile(0x4A9, -4, -2, 5, 1),
				new HouseTile(0x5D0, -4, -2, 31, 1),
				new HouseTile(0x4A9, -4, -1, 5, 1),
				new HouseTile(0x5D0, -4, -1, 34, 1),
				new HouseTile(0x4AC, -4, 0, 5, 1),
				new HouseTile(0x5CF, -4, 0, 34, 1),
				new HouseTile(0x4AC, -4, 1, 5, 1),
				new HouseTile(0x5CF, -4, 1, 31, 1),
				new HouseTile(0x4AB, -4, 2, 5, 1),
				new HouseTile(0x5CF, -4, 2, 28, 1),
				new HouseTile(0x4AA, -4, 3, 5, 1),
				new HouseTile(0x5C5, -4, 3, 25, 1),
				new HouseTile(0x4AC, -4, 4, 5, 1),
				new HouseTile(0x5C4, -4, 4, 25, 1),
				new HouseTile(0x63, -4, 5, 0, 1),
				new HouseTile(0x4AC, -4, 5, 5, 1),
				new HouseTile(0x21, -4, 5, 5, 1),
				new HouseTile(0x5C4, -4, 5, 25, 1),
				new HouseTile(0x740, -4, 6, 0, 1),
				new HouseTile(0xB9A, -4, 6, 5, 1),
				new HouseTile(0x5C4, -4, 6, 25, 1),
				new HouseTile(0x63, -3, -5, 0, 1),
				new HouseTile(0x1C, -3, -5, 5, 1),
				new HouseTile(0x4AB, -3, -4, 5, 1),
				new HouseTile(0x5D0, -3, -4, 25, 1),
				new HouseTile(0x4AB, -3, -3, 5, 1),
				new HouseTile(0x5D0, -3, -3, 28, 1),
				new HouseTile(0x4A9, -3, -2, 5, 1),
				new HouseTile(0x5D0, -3, -2, 31, 1),
				new HouseTile(0x4A9, -3, -1, 5, 1),
				new HouseTile(0x5D0, -3, -1, 34, 1),
				new HouseTile(0x4AA, -3, 0, 5, 1),
				new HouseTile(0x5CF, -3, 0, 34, 1),
				new HouseTile(0x4AB, -3, 1, 5, 1),
				new HouseTile(0x5CF, -3, 1, 31, 1),
				new HouseTile(0x4AB, -3, 2, 5, 1),
				new HouseTile(0x5C5, -3, 2, 28, 1),
				new HouseTile(0x4AB, -3, 3, 5, 1),
				new HouseTile(0x5C4, -3, 3, 28, 1),
				new HouseTile(0x4AC, -3, 4, 5, 1),
				new HouseTile(0x5C4, -3, 4, 28, 1),
				new HouseTile(0x4A9, -3, 5, 5, 1),
				new HouseTile(0x5C4, -3, 5, 28, 1),
				new HouseTile(0x739, -3, 6, 0, 1),
				new HouseTile(0x5C4, -3, 6, 28, 1),
				new HouseTile(0x63, -2, -5, 0, 1),
				new HouseTile(0x22, -2, -5, 5, 1),
				new HouseTile(0x4AB, -2, -4, 5, 1),
				new HouseTile(0x5D0, -2, -4, 25, 1),
				new HouseTile(0x4AA, -2, -3, 5, 1),
				new HouseTile(0x5D0, -2, -3, 28, 1),
				new HouseTile(0x4AA, -2, -2, 5, 1),
				new HouseTile(0x5D0, -2, -2, 31, 1),
				new HouseTile(0x4AC, -2, -1, 5, 1),
				new HouseTile(0x5D0, -2, -1, 34, 1),
				new HouseTile(0x4AA, -2, 0, 5, 1),
				new HouseTile(0x5CF, -2, 0, 34, 1),
				new HouseTile(0x4A9, -2, 1, 5, 1),
				new HouseTile(0x5C5, -2, 1, 31, 1),
				new HouseTile(0x4AC, -2, 2, 5, 1),
				new HouseTile(0x5C4, -2, 2, 31, 1),
				new HouseTile(0x4AC, -2, 3, 5, 1),
				new HouseTile(0x5C4, -2, 3, 31, 1),
				new HouseTile(0x4AC, -2, 4, 5, 1),
				new HouseTile(0x5C4, -2, 4, 31, 1),
				new HouseTile(0x4AB, -2, 5, 5, 1),
				new HouseTile(0x5C4, -2, 5, 31, 1),
				new HouseTile(0x739, -2, 6, 0, 1),
				new HouseTile(0x5C4, -2, 6, 31, 1),
				new HouseTile(0x63, -1, -5, 0, 1),
				new HouseTile(0x1C, -1, -5, 5, 1),
				new HouseTile(0x4AA, -1, -4, 5, 1),
				new HouseTile(0x5D0, -1, -4, 25, 1),
				new HouseTile(0x4AC, -1, -3, 5, 1),
				new HouseTile(0x5D0, -1, -3, 28, 1),
				new HouseTile(0x4AC, -1, -2, 5, 1),
				new HouseTile(0x5D0, -1, -2, 31, 1),
				new HouseTile(0x4AA, -1, -1, 5, 1),
				new HouseTile(0x5D0, -1, -1, 34, 1),
				new HouseTile(0x4A9, -1, 0, 5, 1),
				new HouseTile(0x5CF, -1, 0, 34, 1),
				new HouseTile(0x4A9, -1, 1, 5, 1),
				new HouseTile(0x5C8, -1, 1, 31, 1),
				new HouseTile(0x4AB, -1, 2, 5, 1),
				new HouseTile(0x5C3, -1, 2, 31, 1),
				new HouseTile(0x4AB, -1, 3, 5, 1),
				new HouseTile(0x5C3, -1, 3, 31, 1),
				new HouseTile(0x4AA, -1, 4, 5, 1),
				new HouseTile(0x5C3, -1, 4, 31, 1),
				new HouseTile(0x63, -1, 5, 0, 1),
				new HouseTile(0x4A9, -1, 5, 5, 1),
				new HouseTile(0x1E, -1, 5, 5, 1),
				new HouseTile(0x5C3, -1, 5, 31, 1),
				new HouseTile(0x73E, -1, 6, 0, 1),
				new HouseTile(0x5C3, -1, 6, 31, 1),
				new HouseTile(0x63, 0, -5, 0, 1),
				new HouseTile(0x1C, 0, -5, 5, 1),
				new HouseTile(0x4A9, 0, -4, 5, 1),
				new HouseTile(0x5D0, 0, -4, 25, 1),
				new HouseTile(0x4AB, 0, -3, 5, 1),
				new HouseTile(0x5D0, 0, -3, 28, 1),
				new HouseTile(0x4AB, 0, -2, 5, 1),
				new HouseTile(0x5D0, 0, -2, 31, 1),
				new HouseTile(0x4AA, 0, -1, 5, 1),
				new HouseTile(0x5D0, 0, -1, 34, 1),
				new HouseTile(0x4AB, 0, 0, 5, 1),
				new HouseTile(0x5CF, 0, 0, 34, 1),
				new HouseTile(0x4AC, 0, 1, 5, 1),
				new HouseTile(0x5CF, 0, 1, 31, 1),
				new HouseTile(0x66, 0, 2, 0, 1),
				new HouseTile(0x4AA, 0, 2, 5, 1),
				new HouseTile(0x1D, 0, 2, 5, 1),
				new HouseTile(0x5C8, 0, 2, 28, 1),
				new HouseTile(0x64, 0, 3, 0, 1),
				new HouseTile(0x4AC, 0, 3, 5, 1),
				new HouseTile(0x1B, 0, 3, 5, 1),
				new HouseTile(0x5C3, 0, 3, 28, 1),
				new HouseTile(0x64, 0, 4, 0, 1),
				new HouseTile(0x4AB, 0, 4, 5, 1),
				new HouseTile(0x1B, 0, 4, 5, 1),
				new HouseTile(0x5C3, 0, 4, 28, 1),
				new HouseTile(0x65, 0, 5, 0, 1),
				new HouseTile(0x4AB, 0, 5, 5, 1),
				new HouseTile(0x1C, 0, 5, 5, 1),
				new HouseTile(0x20, 0, 5, 5, 1),
				new HouseTile(0x5C3, 0, 5, 28, 1),
				new HouseTile(0x5C3, 0, 6, 28, 1),
				new HouseTile(0x63, 1, -5, 0, 1),
				new HouseTile(0x1C, 1, -5, 5, 1),
				new HouseTile(0x4AB, 1, -4, 5, 1),
				new HouseTile(0x5D0, 1, -4, 25, 1),
				new HouseTile(0x4AC, 1, -3, 5, 1),
				new HouseTile(0x5D0, 1, -3, 28, 1),
				new HouseTile(0x4AC, 1, -2, 5, 1),
				new HouseTile(0x5D0, 1, -2, 31, 1),
				new HouseTile(0x4AB, 1, -1, 5, 1),
				new HouseTile(0x5D0, 1, -1, 34, 1),
				new HouseTile(0x1, 1, 0, 0, 0),
				new HouseTile(0x4AB, 1, 0, 5, 1),
				new HouseTile(0x5CF, 1, 0, 34, 1),
				new HouseTile(0x4AB, 1, 1, 5, 1),
				new HouseTile(0x5CF, 1, 1, 31, 1),
				new HouseTile(0x63, 1, 2, 0, 1),
				new HouseTile(0x4AB, 1, 2, 5, 1),
				new HouseTile(0x1C, 1, 2, 5, 1),
				new HouseTile(0x5CF, 1, 2, 28, 1),
				new HouseTile(0x5C8, 1, 3, 25, 1),
				new HouseTile(0x5C3, 1, 4, 25, 1),
				new HouseTile(0x5C3, 1, 5, 25, 1),
				new HouseTile(0x5C3, 1, 6, 25, 1),
				new HouseTile(0x63, 2, -5, 0, 1),
				new HouseTile(0x1C, 2, -5, 5, 1),
				new HouseTile(0x4AC, 2, -4, 5, 1),
				new HouseTile(0x5D0, 2, -4, 25, 1),
				new HouseTile(0x4A9, 2, -3, 5, 1),
				new HouseTile(0x5D0, 2, -3, 28, 1),
				new HouseTile(0x4AA, 2, -2, 5, 1),
				new HouseTile(0x5D0, 2, -2, 31, 1),
				new HouseTile(0x4A9, 2, -1, 5, 1),
				new HouseTile(0x5D0, 2, -1, 34, 1),
				new HouseTile(0x4AA, 2, 0, 5, 1),
				new HouseTile(0x5CF, 2, 0, 34, 1),
				new HouseTile(0x4AB, 2, 1, 5, 1),
				new HouseTile(0x5CF, 2, 1, 31, 1),
				new HouseTile(0x63, 2, 2, 0, 1),
				new HouseTile(0x4AA, 2, 2, 5, 1),
				new HouseTile(0x22, 2, 2, 5, 1),
				new HouseTile(0x5CF, 2, 2, 28, 1),
				new HouseTile(0x5CF, 2, 3, 25, 1),
				new HouseTile(0x63, 3, -5, 0, 1),
				new HouseTile(0x1C, 3, -5, 5, 1),
				new HouseTile(0x4AC, 3, -4, 5, 1),
				new HouseTile(0x5D0, 3, -4, 25, 1),
				new HouseTile(0x4A9, 3, -3, 5, 1),
				new HouseTile(0x5D0, 3, -3, 28, 1),
				new HouseTile(0x4AA, 3, -2, 5, 1),
				new HouseTile(0x5D0, 3, -2, 31, 1),
				new HouseTile(0x4AA, 3, -1, 5, 1),
				new HouseTile(0x5D0, 3, -1, 34, 1),
				new HouseTile(0x4AA, 3, 0, 5, 1),
				new HouseTile(0x5CF, 3, 0, 34, 1),
				new HouseTile(0x4AC, 3, 1, 5, 1),
				new HouseTile(0x5CF, 3, 1, 31, 1),
				new HouseTile(0x63, 3, 2, 0, 1),
				new HouseTile(0x4AA, 3, 2, 5, 1),
				new HouseTile(0x1C, 3, 2, 5, 1),
				new HouseTile(0x5CF, 3, 2, 28, 1),
				new HouseTile(0x5CF, 3, 3, 25, 1),
				new HouseTile(0x63, 4, -5, 0, 1),
				new HouseTile(0x22, 4, -5, 5, 1),
				new HouseTile(0x4AC, 4, -4, 5, 1),
				new HouseTile(0x5D0, 4, -4, 25, 1),
				new HouseTile(0x4AB, 4, -3, 5, 1),
				new HouseTile(0x5D0, 4, -3, 28, 1),
				new HouseTile(0x4AA, 4, -2, 5, 1),
				new HouseTile(0x5D0, 4, -2, 31, 1),
				new HouseTile(0x4AA, 4, -1, 5, 1),
				new HouseTile(0x5D0, 4, -1, 34, 1),
				new HouseTile(0x4AA, 4, 0, 5, 1),
				new HouseTile(0x5CF, 4, 0, 34, 1),
				new HouseTile(0x4AA, 4, 1, 5, 1),
				new HouseTile(0x5CF, 4, 1, 31, 1),
				new HouseTile(0x63, 4, 2, 0, 1),
				new HouseTile(0x4AB, 4, 2, 5, 1),
				new HouseTile(0x1C, 4, 2, 5, 1),
				new HouseTile(0x5CF, 4, 2, 28, 1),
				new HouseTile(0x5CF, 4, 3, 25, 1),
				new HouseTile(0x63, 5, -5, 0, 1),
				new HouseTile(0x1C, 5, -5, 5, 1),
				new HouseTile(0x4A9, 5, -4, 5, 1),
				new HouseTile(0x5D0, 5, -4, 25, 1),
				new HouseTile(0x4A9, 5, -3, 5, 1),
				new HouseTile(0x5D0, 5, -3, 28, 1),
				new HouseTile(0x4A9, 5, -2, 5, 1),
				new HouseTile(0x5D0, 5, -2, 31, 1),
				new HouseTile(0x4A9, 5, -1, 5, 1),
				new HouseTile(0x5D0, 5, -1, 34, 1),
				new HouseTile(0x4A9, 5, 0, 5, 1),
				new HouseTile(0x5CF, 5, 0, 34, 1),
				new HouseTile(0x4AB, 5, 1, 5, 1),
				new HouseTile(0x5CF, 5, 1, 31, 1),
				new HouseTile(0x63, 5, 2, 0, 1),
				new HouseTile(0x4A9, 5, 2, 5, 1),
				new HouseTile(0x22, 5, 2, 5, 1),
				new HouseTile(0x5CF, 5, 2, 28, 1),
				new HouseTile(0x5CF, 5, 3, 25, 1),
				new HouseTile(0x63, 6, -5, 0, 1),
				new HouseTile(0x21, 6, -5, 5, 1),
				new HouseTile(0x64, 6, -4, 0, 1),
				new HouseTile(0x4AA, 6, -4, 5, 1),
				new HouseTile(0x1B, 6, -4, 5, 1),
				new HouseTile(0x5D0, 6, -4, 25, 1),
				new HouseTile(0x64, 6, -3, 0, 1),
				new HouseTile(0x4AA, 6, -3, 5, 1),
				new HouseTile(0x23, 6, -3, 5, 1),
				new HouseTile(0x26, 6, -3, 25, 1),
				new HouseTile(0x26, 6, -3, 25, 1),
				new HouseTile(0x5D0, 6, -3, 28, 1),
				new HouseTile(0x64, 6, -2, 0, 1),
				new HouseTile(0x4AC, 6, -2, 5, 1),
				new HouseTile(0x1B, 6, -2, 5, 1),
				new HouseTile(0x26, 6, -2, 25, 1),
				new HouseTile(0x5D0, 6, -2, 31, 1),
				new HouseTile(0x64, 6, -1, 0, 1),
				new HouseTile(0x4AB, 6, -1, 5, 1),
				new HouseTile(0x1B, 6, -1, 5, 1),
				new HouseTile(0x26, 6, -1, 25, 1),
				new HouseTile(0x5D0, 6, -1, 34, 1),
				new HouseTile(0x64, 6, 0, 0, 1),
				new HouseTile(0x4A9, 6, 0, 5, 1),
				new HouseTile(0x1B, 6, 0, 5, 1),
				new HouseTile(0x26, 6, 0, 25, 1),
				new HouseTile(0x5CF, 6, 0, 34, 1),
				new HouseTile(0x64, 6, 1, 0, 1),
				new HouseTile(0x4AC, 6, 1, 5, 1),
				new HouseTile(0x23, 6, 1, 5, 1),
				new HouseTile(0x26, 6, 1, 25, 1),
				new HouseTile(0x5CF, 6, 1, 31, 1),
				new HouseTile(0x65, 6, 2, 0, 1),
				new HouseTile(0x4A9, 6, 2, 5, 1),
				new HouseTile(0x1C, 6, 2, 5, 1),
				new HouseTile(0x20, 6, 2, 5, 1),
				new HouseTile(0x5CF, 6, 2, 28, 1),
				new HouseTile(0x5CF, 6, 3, 25, 1),
				new HouseTile(0x5D0, 7, -4, 25, 1),
				new HouseTile(0x5D0, 7, -3, 28, 1),
				new HouseTile(0x5D0, 7, -2, 31, 1),
				new HouseTile(0x5D0, 7, -1, 34, 1),
				new HouseTile(0x5CF, 7, 0, 34, 1),
				new HouseTile(0x5CF, 7, 1, 31, 1),
				new HouseTile(0x5CF, 7, 2, 28, 1),
				new HouseTile(0x5CF, 7, 3, 25, 1),
            };

            foreach (HouseTile tile in tiles)
            {
                AddComponent(new AddonComponent(tile.ItemID), tile.X, tile.Y, tile.Z);
            }
        }

        public PlainStoneHouseAddon(Serial serial) : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write(0);
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }
}
