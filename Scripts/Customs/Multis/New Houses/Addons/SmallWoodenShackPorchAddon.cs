using Server;
using Server.Items;

namespace Server.Multis
{
    public class SmallWoodenShackPorchAddon : BaseAddon
    {
        public override BaseAddonDeed Deed => null;
		
		[Constructable]
        public SmallWoodenShackPorchAddon()
        {
            HouseTile[] tiles = new HouseTile[]
            {
				new HouseTile(0x17, -4, -3, 0, 1),
				new HouseTile(0x9, -4, -3, 6, 1),
				new HouseTile(0x15, -4, -2, 0, 1),
				new HouseTile(0x8, -4, -2, 6, 1),
				new HouseTile(0x15, -4, -1, 0, 1),
				new HouseTile(0x8, -4, -1, 6, 1),
				new HouseTile(0x15, -4, 0, 0, 1),
				new HouseTile(0xF, -4, 0, 6, 1),
				new HouseTile(0x15, -4, 1, 0, 1),
				new HouseTile(0x8, -4, 1, 6, 1),
				new HouseTile(0x15, -4, 2, 0, 1),
				new HouseTile(0x8, -4, 2, 6, 1),
				new HouseTile(0x15, -4, 3, 0, 1),
				new HouseTile(0x8, -4, 3, 6, 1),
				new HouseTile(0x16, -3, -3, 0, 1),
				new HouseTile(0x7, -3, -3, 6, 1),
				new HouseTile(0x4C8, -3, -2, 0, 1),
				new HouseTile(0x4C8, -3, -2, 6, 1),
				new HouseTile(0x5C4, -3, -2, 26, 1),
				new HouseTile(0x4C9, -3, -1, 0, 1),
				new HouseTile(0x4C7, -3, -1, 6, 1),
				new HouseTile(0x5C4, -3, -1, 26, 1),
				new HouseTile(0x4C8, -3, 0, 0, 1),
				new HouseTile(0x4C7, -3, 0, 6, 1),
				new HouseTile(0x5C4, -3, 0, 26, 1),
				new HouseTile(0x4C7, -3, 1, 0, 1),
				new HouseTile(0x4C8, -3, 1, 6, 1),
				new HouseTile(0x5C4, -3, 1, 26, 1),
				new HouseTile(0x4C8, -3, 2, 0, 1),
				new HouseTile(0x4C6, -3, 2, 6, 1),
				new HouseTile(0x5C4, -3, 2, 26, 1),
				new HouseTile(0x4C9, -3, 3, 0, 1),
				new HouseTile(0x16, -3, 3, 0, 1),
				new HouseTile(0x4C7, -3, 3, 6, 1),
				new HouseTile(0x7, -3, 3, 6, 1),
				new HouseTile(0x5C4, -3, 3, 26, 1),
				new HouseTile(0xB98, -3, 4, 4, 1),
				new HouseTile(0x5C4, -3, 4, 26, 1),
				new HouseTile(0x16, -2, -3, 0, 1),
				new HouseTile(0xE, -2, -3, 6, 1),
				new HouseTile(0x4C6, -2, -2, 0, 1),
				new HouseTile(0x4C8, -2, -2, 6, 1),
				new HouseTile(0x5C4, -2, -2, 29, 1),
				new HouseTile(0x4C6, -2, -1, 0, 1),
				new HouseTile(0x4C8, -2, -1, 6, 1),
				new HouseTile(0x5C4, -2, -1, 29, 1),
				new HouseTile(0x4C6, -2, 0, 0, 1),
				new HouseTile(0x4C8, -2, 0, 6, 1),
				new HouseTile(0x5C4, -2, 0, 29, 1),
				new HouseTile(0x4C6, -2, 1, 0, 1),
				new HouseTile(0x4C9, -2, 1, 6, 1),
				new HouseTile(0x5C4, -2, 1, 29, 1),
				new HouseTile(0x4C9, -2, 2, 0, 1),
				new HouseTile(0x4C9, -2, 2, 6, 1),
				new HouseTile(0x5C4, -2, 2, 29, 1),
				new HouseTile(0x4C8, -2, 3, 0, 1),
				new HouseTile(0x16, -2, 3, 0, 1),
				new HouseTile(0x4C8, -2, 3, 6, 1),
				new HouseTile(0x7, -2, 3, 6, 1),
				new HouseTile(0x5C4, -2, 3, 29, 1),
				new HouseTile(0x5C4, -2, 4, 29, 1),
				new HouseTile(0x16, -1, -3, 0, 1),
				new HouseTile(0x7, -1, -3, 6, 1),
				new HouseTile(0x4C7, -1, -2, 0, 1),
				new HouseTile(0x4C6, -1, -2, 6, 1),
				new HouseTile(0x5C2, -1, -2, 32, 1),
				new HouseTile(0x4C7, -1, -1, 0, 1),
				new HouseTile(0x4C6, -1, -1, 6, 1),
				new HouseTile(0x5C2, -1, -1, 32, 1),
				new HouseTile(0x4C8, -1, 0, 0, 1),
				new HouseTile(0x4C9, -1, 0, 6, 1),
				new HouseTile(0x5C2, -1, 0, 32, 1),
				new HouseTile(0x4C6, -1, 1, 0, 1),
				new HouseTile(0x4C9, -1, 1, 6, 1),
				new HouseTile(0x5C2, -1, 1, 32, 1),
				new HouseTile(0x4C6, -1, 2, 0, 1),
				new HouseTile(0x4C6, -1, 2, 6, 1),
				new HouseTile(0x5C2, -1, 2, 32, 1),
				new HouseTile(0x4C9, -1, 3, 0, 1),
				new HouseTile(0x16, -1, 3, 0, 1),
				new HouseTile(0x4C7, -1, 3, 6, 1),
				new HouseTile(0x7, -1, 3, 6, 1),
				new HouseTile(0x5C2, -1, 3, 32, 1),
				new HouseTile(0x5C2, -1, 4, 32, 1),
				new HouseTile(0x17, 0, -5, 0, 1),
				new HouseTile(0x865, 0, -5, 6, 1),
				new HouseTile(0x15, 0, -4, 0, 1),
				new HouseTile(0x864, 0, -4, 6, 1),
				new HouseTile(0x14, 0, -3, 0, 1),
				new HouseTile(0x864, 0, -3, 6, 1),
				new HouseTile(0x7, 0, -3, 6, 1),
				new HouseTile(0x4C8, 0, -2, 0, 1),
				new HouseTile(0x15, 0, -2, 0, 1),
				new HouseTile(0x4C8, 0, -2, 6, 1),
				new HouseTile(0x8, 0, -2, 6, 1),
				new HouseTile(0x5C3, 0, -2, 29, 1),
				new HouseTile(0x4C8, 0, -1, 0, 1),
				new HouseTile(0x15, 0, -1, 0, 1),
				new HouseTile(0x4C6, 0, -1, 6, 1),
				new HouseTile(0x8, 0, -1, 6, 1),
				new HouseTile(0x5C3, 0, -1, 29, 1),
				new HouseTile(0x4C6, 0, 0, 0, 1),
				new HouseTile(0x15, 0, 0, 0, 1),
				new HouseTile(0x4C8, 0, 0, 6, 1),
				new HouseTile(0x5C3, 0, 0, 29, 1),
				new HouseTile(0x4C9, 0, 1, 0, 1),
				new HouseTile(0x15, 0, 1, 0, 1),
				new HouseTile(0x4C8, 0, 1, 6, 1),
				new HouseTile(0x5C3, 0, 1, 29, 1),
				new HouseTile(0x4C9, 0, 2, 0, 1),
				new HouseTile(0x15, 0, 2, 0, 1),
				new HouseTile(0x4C8, 0, 2, 6, 1),
				new HouseTile(0x8, 0, 2, 6, 1),
				new HouseTile(0x5C3, 0, 2, 29, 1),
				new HouseTile(0x4C7, 0, 3, 0, 1),
				new HouseTile(0x14, 0, 3, 0, 1),
				new HouseTile(0x4C7, 0, 3, 6, 1),
				new HouseTile(0x6, 0, 3, 6, 1),
				new HouseTile(0x5C3, 0, 3, 29, 1),
				new HouseTile(0x15, 0, 4, 0, 1),
				new HouseTile(0x73E, 0, 4, 0, 1),
				new HouseTile(0x864, 0, 4, 6, 1),
				new HouseTile(0x5C3, 0, 4, 29, 1),
				new HouseTile(0x15, 0, 5, 0, 1),
				new HouseTile(0x864, 0, 5, 6, 1),
				new HouseTile(0x16, 1, -5, 0, 1),
				new HouseTile(0x88A, 1, -5, 6, 1),
				new HouseTile(0x4C6, 1, -4, 0, 1),
				new HouseTile(0x4D1, 1, -4, 6, 1),
				new HouseTile(0x4C7, 1, -3, 0, 1),
				new HouseTile(0x4CF, 1, -3, 6, 1),
				new HouseTile(0x4C8, 1, -2, 0, 1),
				new HouseTile(0x4CF, 1, -2, 6, 1),
				new HouseTile(0x5C3, 1, -2, 26, 1),
				new HouseTile(0x4C9, 1, -1, 0, 1),
				new HouseTile(0x4CF, 1, -1, 6, 1),
				new HouseTile(0x5C3, 1, -1, 26, 1),
				new HouseTile(0x4C7, 1, 0, 0, 1),
				new HouseTile(0x4CF, 1, 0, 6, 1),
				new HouseTile(0x5C3, 1, 0, 26, 1),
				new HouseTile(0x4C9, 1, 1, 0, 1),
				new HouseTile(0x4CF, 1, 1, 6, 1),
				new HouseTile(0x5C3, 1, 1, 26, 1),
				new HouseTile(0x4C6, 1, 2, 0, 1),
				new HouseTile(0x4CF, 1, 2, 6, 1),
				new HouseTile(0x5C3, 1, 2, 26, 1),
				new HouseTile(0x4C8, 1, 3, 0, 1),
				new HouseTile(0x4CF, 1, 3, 6, 1),
				new HouseTile(0x5C3, 1, 3, 26, 1),
				new HouseTile(0x4C6, 1, 4, 0, 1),
				new HouseTile(0x4CF, 1, 4, 6, 1),
				new HouseTile(0x5C3, 1, 4, 26, 1),
				new HouseTile(0x4C6, 1, 5, 0, 1),
				new HouseTile(0x16, 1, 5, 0, 1),
				new HouseTile(0x4D0, 1, 5, 6, 1),
				new HouseTile(0x863, 1, 5, 6, 1),
				new HouseTile(0x16, 2, -5, 0, 1),
				new HouseTile(0x863, 2, -5, 6, 1),
				new HouseTile(0x4C8, 2, -4, 0, 1),
				new HouseTile(0x4CB, 2, -4, 6, 1),
				new HouseTile(0x4C6, 2, -3, 0, 1),
				new HouseTile(0x4C9, 2, -3, 6, 1),
				new HouseTile(0x4C6, 2, -2, 0, 1),
				new HouseTile(0x4C7, 2, -2, 6, 1),
				new HouseTile(0x4C7, 2, -1, 0, 1),
				new HouseTile(0x4C9, 2, -1, 6, 1),
				new HouseTile(0x4C8, 2, 0, 0, 1),
				new HouseTile(0x4C6, 2, 0, 6, 1),
				new HouseTile(0x4C7, 2, 1, 0, 1),
				new HouseTile(0x4C7, 2, 1, 6, 1),
				new HouseTile(0x4C8, 2, 2, 0, 1),
				new HouseTile(0x4C6, 2, 2, 6, 1),
				new HouseTile(0x4C6, 2, 3, 0, 1),
				new HouseTile(0x4C8, 2, 3, 6, 1),
				new HouseTile(0x4C8, 2, 4, 0, 1),
				new HouseTile(0x4C8, 2, 4, 6, 1),
				new HouseTile(0x4C7, 2, 5, 0, 1),
				new HouseTile(0x16, 2, 5, 0, 1),
				new HouseTile(0x4CD, 2, 5, 6, 1),
				new HouseTile(0x863, 2, 5, 6, 1),
				new HouseTile(0x16, 3, -5, 0, 1),
				new HouseTile(0x863, 3, -5, 6, 1),
				new HouseTile(0x4C8, 3, -4, 0, 1),
				new HouseTile(0x4CC, 3, -4, 6, 1),
				new HouseTile(0x4C9, 3, -3, 0, 1),
				new HouseTile(0x4C8, 3, -3, 6, 1),
				new HouseTile(0x4C8, 3, -2, 0, 1),
				new HouseTile(0x4C7, 3, -2, 6, 1),
				new HouseTile(0x4C7, 3, -1, 0, 1),
				new HouseTile(0x4C8, 3, -1, 6, 1),
				new HouseTile(0x4C9, 3, 0, 0, 1),
				new HouseTile(0x4C7, 3, 0, 6, 1),
				new HouseTile(0x4C6, 3, 1, 0, 1),
				new HouseTile(0x4C9, 3, 1, 6, 1),
				new HouseTile(0x4C8, 3, 2, 0, 1),
				new HouseTile(0x4C8, 3, 2, 6, 1),
				new HouseTile(0x4C7, 3, 3, 0, 1),
				new HouseTile(0x4C6, 3, 3, 6, 1),
				new HouseTile(0x4C6, 3, 4, 0, 1),
				new HouseTile(0x4C8, 3, 4, 6, 1),
				new HouseTile(0x4C6, 3, 5, 0, 1),
				new HouseTile(0x16, 3, 5, 0, 1),
				new HouseTile(0x4CD, 3, 5, 6, 1),
				new HouseTile(0x863, 3, 5, 6, 1),
				new HouseTile(0x16, 4, -5, 0, 1),
				new HouseTile(0x863, 4, -5, 6, 1),
				new HouseTile(0x4C9, 4, -4, 0, 1),
				new HouseTile(0x15, 4, -4, 0, 1),
				new HouseTile(0x4D3, 4, -4, 6, 1),
				new HouseTile(0x864, 4, -4, 6, 1),
				new HouseTile(0x4C8, 4, -3, 0, 1),
				new HouseTile(0x15, 4, -3, 0, 1),
				new HouseTile(0x4CE, 4, -3, 6, 1),
				new HouseTile(0x864, 4, -3, 6, 1),
				new HouseTile(0x4C9, 4, -2, 0, 1),
				new HouseTile(0x15, 4, -2, 0, 1),
				new HouseTile(0x4CE, 4, -2, 6, 1),
				new HouseTile(0x864, 4, -2, 6, 1),
				new HouseTile(0x4C7, 4, -1, 0, 1),
				new HouseTile(0x15, 4, -1, 0, 1),
				new HouseTile(0x4CE, 4, -1, 6, 1),
				new HouseTile(0x864, 4, -1, 6, 1),
				new HouseTile(0x4C6, 4, 0, 0, 1),
				new HouseTile(0x15, 4, 0, 0, 1),
				new HouseTile(0x4CE, 4, 0, 6, 1),
				new HouseTile(0x4C6, 4, 1, 0, 1),
				new HouseTile(0x15, 4, 1, 0, 1),
				new HouseTile(0x4CE, 4, 1, 6, 1),
				new HouseTile(0x4C7, 4, 2, 0, 1),
				new HouseTile(0x15, 4, 2, 0, 1),
				new HouseTile(0x4CE, 4, 2, 6, 1),
				new HouseTile(0x88B, 4, 2, 6, 1),
				new HouseTile(0x4C6, 4, 3, 0, 1),
				new HouseTile(0x15, 4, 3, 0, 1),
				new HouseTile(0x4CE, 4, 3, 6, 1),
				new HouseTile(0x864, 4, 3, 6, 1),
				new HouseTile(0x4C9, 4, 4, 0, 1),
				new HouseTile(0x15, 4, 4, 0, 1),
				new HouseTile(0x4CE, 4, 4, 6, 1),
				new HouseTile(0x864, 4, 4, 6, 1),
				new HouseTile(0x4C6, 4, 5, 0, 1),
				new HouseTile(0x14, 4, 5, 0, 1),
				new HouseTile(0x4D2, 4, 5, 6, 1),
				new HouseTile(0x862, 4, 5, 6, 1),
				new HouseTile(0x73F, 5, -1, 0, 1),
				new HouseTile(0x73A, 5, 0, 0, 1),
				new HouseTile(0x73A, 5, 1, 0, 1),
				new HouseTile(0x73E, 5, 2, 0, 1),
            };

            foreach (HouseTile tile in tiles)
            {
                AddComponent(new AddonComponent(tile.ItemID), tile.X, tile.Y, tile.Z);
            }
        }

        public SmallWoodenShackPorchAddon(Serial serial) : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write(0);
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }
}
