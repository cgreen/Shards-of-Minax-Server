// CraftingBlueprint.cs
//
// © 2025 – free to use / modify.
//
// ┌─ Blueprint highlights
// │  • Works with *any* craftable item – param-less (e.g. Apple) or param-etric
// │    (e.g. new PowerScroll(SkillName.Swords, 120.0)).
// │  • Random‐spawn constructor (like a treasure‐map) or fully‐custom constructor
// │    for quests, champs, vendors, etc.
// │  • Originals = infinite runs  │ Copies = finite runs (runs tick down)
// │  • Originals can “photo‐copy” themselves (20‐run copies) for 20 Blank Scrolls
// │  • Other scripts/quests just call CraftingBlueprint.Create( … ).
// └─ Now with random skill requirement on loot blueprints!

using System;
using System.Collections.Generic;
using System.Linq;
using Server;
using Server.Items;
using Server.Gumps;
using Server.Targeting;
using Server.Mobiles;
using Server.ACC.CSS.Systems.AlchemyMagic;
using Server.ACC.CSS.Systems.FishingMagic;
using Server.ACC.CSS.Systems.EvalIntMagic;
using Server.ACC.CSS.Systems.ArcheryMagic;
using Server.ACC.CSS.Systems.MageryMagic;
using Server.ACC.CSS.Systems.ArmsLoreMagic;
using Server.ACC.CSS.Systems.AnimalTamingMagic;
using Server.ACC.CSS.Systems.AnimalLoreMagic;
using Server.ACC.CSS.Systems.CarpentryMagic;
using Server.ACC.CSS.Systems.CartographyMagic;
using Server.ACC.CSS.Systems.TasteIDMagic;
using Server.ACC.CSS.Systems.CookingMagic;
using Server.ACC.CSS.Systems.DiscordanceMagic;
using Server.ACC.CSS.Systems.FencingMagic;
using Server.ACC.CSS.Systems.FletchingMagic;
using Server.ACC.CSS.Systems.ForensicsMagic;
using Server.ACC.CSS.Systems.WrestlingMagic;
using Server.ACC.CSS.Systems.ParryMagic;
using Server.ACC.CSS.Systems.HealingMagic;
using Server.ACC.CSS.Systems.DetectHiddenMagic;
using Server.ACC.CSS.Systems.ProvocationMagic;
using Server.ACC.CSS.Systems.LockpickingMagic;
using Server.ACC.CSS.Systems.MacingMagic;
using Server.ACC.CSS.Systems.MeditationMagic;
using Server.ACC.CSS.Systems.BeggingMagic;
using Server.ACC.CSS.Systems.MiningMagic;
using Server.ACC.CSS.Systems.ChivalryMagic;
using Server.ACC.CSS.Systems.StealingMagic;
using Server.ACC.CSS.Systems.InscribeMagic;
using Server.ACC.CSS.Systems.NinjitsuMagic;
using Server.ACC.CSS.Systems.HidingMagic;
using Server.ACC.CSS.Systems.StealthMagic;
using Server.ACC.CSS.Systems.BlacksmithMagic;
using Server.ACC.CSS.Systems.TacticsMagic;
using Server.ACC.CSS.Systems.SwordsMagic;
using Server.ACC.CSS.Systems.TailoringMagic;
using Server.ACC.CSS.Systems.NecromancyMagic;
using Server.ACC.CSS.Systems.TrackingMagic;
using Server.ACC.CSS.Systems.RemoveTrapMagic;
using Server.ACC.CSS.Systems.VeterinaryMagic;
using Server.ACC.CSS.Systems.MusicianshipMagic;
using Server.ACC.CSS.Systems.CampingMagic;
using Server.ACC.CSS.Systems.LumberjackingMagic;
using Server.Engines.Plants;
using Server.Items.Crops;
using Server.Commands;

namespace Server.Items
{
    public class CraftingBlueprint : Item
    {
        // ─── ❶ internal recipe record ───────────────────────────────────────

        public struct MaterialEntry
        {
            public Type Type;
            public int  Amount;
            public MaterialEntry(Type t, int amt) { Type = t; Amount = amt; }

            public void Serialize(GenericWriter w)
            {
                w.Write(Type.FullName);
                w.Write(Amount);
            }

            public static MaterialEntry Deserialize(GenericReader r) =>
                new MaterialEntry(Type.GetType(r.ReadString()), r.ReadInt());
        }

        public struct BlueprintTarget
        {
            public Type     ProductType;
            public object[] Args;

            public BlueprintTarget(Type t, params object[] args)
            {
                ProductType = t;
                Args        = args ?? Array.Empty<object>();
            }

            public Item Instantiate() =>
                Activator.CreateInstance(ProductType, Args) as Item;

            public string PrettyName
            {
                get
                {
                    try
                    {
                        var tmp = Instantiate();
                        var n   = tmp?.Name ?? ProductType.Name;
                        tmp?.Delete();
                        return n;
                    }
                    catch { return ProductType.Name; }
                }
            }

            public void Serialize(GenericWriter w)
            {
                w.Write(ProductType.FullName);
                w.Write(Args.Length);
                foreach (var o in Args)
                    w.Write(o.ToString());
            }

            public static BlueprintTarget Deserialize(GenericReader r)
            {
                Type t = Type.GetType(r.ReadString());
                int  n = r.ReadInt();
                var  args = new object[n];
                for (int i = 0; i < n; ++i)
                    args[i] = r.ReadString();
                return new BlueprintTarget(t, args);
            }
        }

        // ─── ❷ fields ───────────────────────────────────────────────────────

        private BlueprintTarget         _product;
        private List<MaterialEntry>     _mats;
        private bool                    _original;
        private int                     _runsRemaining;

        // ** New skill‐requirement fields **
        private SkillName               _requiredSkill;
        private double                  _requiredSkillValue;

        // ─── ❸ GM-tweakable properties ─────────────────────────────────────

        [CommandProperty(AccessLevel.GameMaster)]
        public string ProductName => _product.PrettyName;

        [CommandProperty(AccessLevel.GameMaster)]
        public bool IsOriginal { get => _original; set => _original = value; }

        [CommandProperty(AccessLevel.GameMaster)]
        public int RunsRemaining
        {
            get => _original ? int.MaxValue : _runsRemaining;
            set => _runsRemaining = Math.Max(0, value);
        }

        [CommandProperty(AccessLevel.GameMaster)]
        public SkillName RequiredSkill
        {
            get => _requiredSkill;
            set => _requiredSkill = value;
        }

        [CommandProperty(AccessLevel.GameMaster)]
        public double RequiredSkillValue
        {
            get => _requiredSkillValue;
            set => _requiredSkillValue = value;
        }

        // ─── ❹ constructors ─────────────────────────────────────────────────

        // ▌Loot‐spawned blueprint – adds random skill‐requirement
        [Constructable]
        public CraftingBlueprint()
            : base(0x14F0)
        {
            // pick a random recipe/target/etc.
            var target       = PickRandomTarget();
            var recipe       = PickRandomRecipe();
            var original     = Utility.RandomDouble() < .10;
            var runs         = 20;

            // pick and store the random skill requirement
            var req = PickRandomSkillRequirement();
            _requiredSkill      = req.Skill;
            _requiredSkillValue = req.Value;

            InitializeFields(target, recipe, original, runs);
        }

        // ▌Fully‐custom – call from scripts/quests/vendors/GM commands
        [Constructable]
        public CraftingBlueprint(
            BlueprintTarget          target,
            IEnumerable<MaterialEntry> recipe,
            bool                     original,
            int                      runs,
            out SkillName            reqSkill,
            out double               reqValue
        ) : base(0x14F0)
        {
            // assign the randomly chosen requirement
            var tuple = PickRandomSkillRequirement();
            reqSkill            = _requiredSkill     = tuple.Skill;
            reqValue            = _requiredSkillValue = tuple.Value;

            InitializeFields(target, recipe, original, runs);
        }

        // Shared initialization for both ctors
        private void InitializeFields(
            BlueprintTarget          target,
            IEnumerable<MaterialEntry> recipe,
            bool                     original,
            int                      runs
        )
        {
            LootType        = LootType.Blessed;
            Weight          = 1.0;
            Hue             = original ? 0x47E : 0x4B5;

            _product        = target.ProductType == null
                              ? PickRandomTarget()
                              : target;
            _mats           = recipe?.ToList() ?? PickRandomRecipe().ToList();
            _original       = original;
            _runsRemaining  = original ? -1 : Math.Max(1, runs);

            Name = BuildName();
        }

        private string BuildName()
        {
            var baseName = _original
                ? $"[ORIGINAL] {_product.PrettyName} blueprint"
                : $"{_product.PrettyName} blueprint ({_runsRemaining} runs)";

            return $"{baseName} — requires {_requiredSkill} ≥ {_requiredSkillValue:0}";
        }

        // Helper for scripts (no skill requirement)
        public static CraftingBlueprint Create(
            Type                  productType,
            object[]              productArgs,
            IDictionary<Type,int> mats,
            bool                  original = false,
            int                   runs     = 10
        )
        {
            var target = new BlueprintTarget(productType, productArgs ?? Array.Empty<object>());
            var rec    = mats.Select(kv => new MaterialEntry(kv.Key, kv.Value));
            // bypass skill‐check by setting to Blacksmith 0
            return new CraftingBlueprint(target, rec, original, runs,
                                         out _, out _);
        }

        // ─── ❺ interaction ─────────────────────────────────────────────────

        public override void OnDoubleClick(Mobile from)
        {
            if (!IsChildOf(from.Backpack))
            {
                from.SendLocalizedMessage(1047012); // must be in pack
                return;
            }
            from.CloseGump(typeof(BlueprintGump));
            from.SendGump(new BlueprintGump(from, this));
        }

        private class BlueprintGump : Gump
        {
            private readonly CraftingBlueprint _bp;
            private readonly Mobile            _viewer;

            public BlueprintGump(Mobile from, CraftingBlueprint bp) : base(50, 50)
            {
                _viewer = from;
                _bp     = bp;

                int h = 160 + (_bp._mats.Count * 23) + (_bp._original ? 30 : 0);

                AddPage(0);
                AddBackground(0, 0, 300, h, 9270);

                int y = 20;
                AddLabel(40, y, 88, "Crafting Blueprint"); y += 25;

                AddLabel(30, y, 54, $"Product : {_bp._product.PrettyName}"); y += 20;
                AddLabel(30, y, 54, _bp._original
                    ? "Runs    : ∞"
                    : $"Runs    : {_bp._runsRemaining}");         y += 25;

                // show skill requirement
                AddLabel(30, y, 44,
                    $"Skill   : {_bp._requiredSkill} ≥ {_bp._requiredSkillValue:0}");
                y += 25;

                AddLabel(30, y, 88, "Materials:"); y += 20;
                foreach (var m in _bp._mats)
                {
                    AddLabel(45, y, 54, $"{m.Amount} × {m.Type.Name}");
                    y += 20;
                }

                // buttons
                if (!_bp._original && _bp._runsRemaining <= 0)
                {
                    AddLabel(40, y, 33, "Depleted");
                }
                else
                {
                    AddButton(40, y, 4005, 4007, 1, GumpButtonType.Reply, 0);
                    AddLabel(75, y, 58, "Craft item");
                }
                y += 25;

                if (_bp._original)
                {
                    AddButton(40, y, 4011, 4013, 2, GumpButtonType.Reply, 0);
                    AddLabel (75, y, 58, "Make 20-run copy");
                }
            }

            public override void OnResponse(Server.Network.NetState sender, RelayInfo info)
            {
                switch (info.ButtonID)
                {
                    case 1: _bp.TryCraft(_viewer); break;
                    case 2: _bp.TryCopy(_viewer);  break;
                }
            }
        }

        private void TryCraft(Mobile from)
        {
            if (!_original && _runsRemaining <= 0)
            {
                from.SendMessage("This blueprint is exhausted.");
                return;
            }

            // enforce skill requirement
            var skillVal = from.Skills[_requiredSkill].Base;
            if (skillVal < _requiredSkillValue)
            {
                from.SendMessage(
                    $"You need at least {_requiredSkillValue:0} in {_requiredSkill} to craft this.");
                return;
            }

            if (!HasMaterials(from))
            {
                from.SendMessage("You lack the required ingredients.");
                return;
            }

            ConsumeMaterials(from);

            var product = _product.Instantiate();
            if (product != null)
                from.AddToBackpack(product);

            if (!_original)
            {
                _runsRemaining--;
                if (_runsRemaining <= 0)
                {
                    from.SendMessage("The copy crumbles to dust after its final use.");
                    Delete();
                }
                else
                {
                    Name = BuildName();
                }
            }
        }

        private void TryCopy(Mobile from)
        {
            if (!_original) return;
            const int scrollsNeeded = 20;
            if (from.Backpack.ConsumeTotal(typeof(BlankScroll), scrollsNeeded))
            {
                var mats = _mats.ToDictionary(m => m.Type, m => m.Amount);
                var copy = Create(_product.ProductType, _product.Args, mats,
                                  original:false, runs:20);
                from.AddToBackpack(copy);
                from.SendMessage("You craft a 20-run duplicate blueprint.");
            }
            else
            {
                from.SendMessage($"You need {scrollsNeeded} Blank Scrolls to copy this blueprint.");
            }
        }

        // ─── ❻ helpers ──────────────────────────────────────────────────────

        private bool HasMaterials(Mobile from) =>
            _mats.All(m => from.Backpack.GetAmount(m.Type) >= m.Amount);

        private void ConsumeMaterials(Mobile from)
        {
            foreach (var m in _mats)
                from.Backpack.ConsumeTotal(m.Type, m.Amount);
        }

        private static readonly BlueprintTarget[] ProductPool =
        {
            new BlueprintTarget(typeof(Apple)),
            new BlueprintTarget(typeof(SpecialHairDye)),
            new BlueprintTarget(typeof(AlchemySpellbook)),
            new BlueprintTarget(typeof(FishingSpellbook)),
            new BlueprintTarget(typeof(EvalIntSpellbook)),
            new BlueprintTarget(typeof(ArcherySpellbook)),
            new BlueprintTarget(typeof(MagerySpellbook)),
            new BlueprintTarget(typeof(ArmsLoreSpellbook)),
            new BlueprintTarget(typeof(AnimalTamingSpellbook)),
            new BlueprintTarget(typeof(AnimalLoreSpellbook)),
            new BlueprintTarget(typeof(CarpentrySpellbook)),
            new BlueprintTarget(typeof(CartographySpellbook)),
            new BlueprintTarget(typeof(TasteIDSpellbook)),
            new BlueprintTarget(typeof(CookingSpellbook)),
            new BlueprintTarget(typeof(DiscordanceSpellbook)),
            new BlueprintTarget(typeof(FencingSpellbook)),
            new BlueprintTarget(typeof(FletchingSpellbook)),
            new BlueprintTarget(typeof(ForensicsSpellbook)),
            new BlueprintTarget(typeof(WrestlingSpellbook)),
            new BlueprintTarget(typeof(ParrySpellbook)),
            new BlueprintTarget(typeof(HealingSpellbook)),
            new BlueprintTarget(typeof(DetectHiddenSpellbook)),
            new BlueprintTarget(typeof(ProvocationSpellbook)),
            new BlueprintTarget(typeof(LockpickingSpellbook)),
            new BlueprintTarget(typeof(MacingSpellbook)),
            new BlueprintTarget(typeof(MeditationSpellbook)),
            new BlueprintTarget(typeof(BeggingSpellbook)),
            new BlueprintTarget(typeof(MiningSpellbook)),
            new BlueprintTarget(typeof(ChivalrySpellbook2)),
            new BlueprintTarget(typeof(StealingSpellbook)),
            new BlueprintTarget(typeof(InscribeSpellbook)),
            new BlueprintTarget(typeof(NinjitsuSpellbook)),
            new BlueprintTarget(typeof(HidingSpellbook)),
            new BlueprintTarget(typeof(StealthSpellbook)),
            new BlueprintTarget(typeof(BlacksmithSpellbook)),
            new BlueprintTarget(typeof(TacticsSpellbook)),
            new BlueprintTarget(typeof(SwordsSpellbook)),
            new BlueprintTarget(typeof(TailoringSpellbook)),
            new BlueprintTarget(typeof(NecromancySpellbook)),
            new BlueprintTarget(typeof(TrackingSpellbook)),
            new BlueprintTarget(typeof(RemoveTrapSpellbook)),
            new BlueprintTarget(typeof(VeterinarySpellbook)),
            new BlueprintTarget(typeof(MusicianshipSpellbook)),
            new BlueprintTarget(typeof(CampingSpellbook)),
            new BlueprintTarget(typeof(LumberjackingSpellbook)),
            new BlueprintTarget(typeof(AlchemySpellbook)),
            new BlueprintTarget(typeof(FishingSpellbook)),
            new BlueprintTarget(typeof(EvalIntSpellbook)),
            new BlueprintTarget(typeof(ArcherySpellbook)),
            new BlueprintTarget(typeof(MagerySpellbook)),
            new BlueprintTarget(typeof(ArmsLoreSpellbook)),
            new BlueprintTarget(typeof(AnimalTamingSpellbook)),
            new BlueprintTarget(typeof(AnimalLoreSpellbook)),
            new BlueprintTarget(typeof(CarpentrySpellbook)),
            new BlueprintTarget(typeof(CartographySpellbook)),
            new BlueprintTarget(typeof(TasteIDSpellbook)),
            new BlueprintTarget(typeof(CookingSpellbook)),
            new BlueprintTarget(typeof(DiscordanceSpellbook)),
            new BlueprintTarget(typeof(FencingSpellbook)),
            new BlueprintTarget(typeof(FletchingSpellbook)),
            new BlueprintTarget(typeof(ForensicsSpellbook)),
            new BlueprintTarget(typeof(WrestlingSpellbook)),
            new BlueprintTarget(typeof(ParrySpellbook)),
            new BlueprintTarget(typeof(HealingSpellbook)),
            new BlueprintTarget(typeof(DetectHiddenSpellbook)),
            new BlueprintTarget(typeof(ProvocationSpellbook)),
            new BlueprintTarget(typeof(LockpickingSpellbook)),
            new BlueprintTarget(typeof(MacingSpellbook)),
            new BlueprintTarget(typeof(MeditationSpellbook)),
            new BlueprintTarget(typeof(BeggingSpellbook)),
            new BlueprintTarget(typeof(MiningSpellbook)),
            new BlueprintTarget(typeof(ChivalrySpellbook2)),
            new BlueprintTarget(typeof(StealingSpellbook)),
            new BlueprintTarget(typeof(InscribeSpellbook)),
            new BlueprintTarget(typeof(NinjitsuSpellbook)),
            new BlueprintTarget(typeof(HidingSpellbook)),
            new BlueprintTarget(typeof(StealthSpellbook)),
            new BlueprintTarget(typeof(BlacksmithSpellbook)),
            new BlueprintTarget(typeof(TacticsSpellbook)),
            new BlueprintTarget(typeof(SwordsSpellbook)),
            new BlueprintTarget(typeof(TailoringSpellbook)),
            new BlueprintTarget(typeof(NecromancySpellbook)),
            new BlueprintTarget(typeof(TrackingSpellbook)),
            new BlueprintTarget(typeof(RemoveTrapSpellbook)),
            new BlueprintTarget(typeof(VeterinarySpellbook)),
            new BlueprintTarget(typeof(MusicianshipSpellbook)),
            new BlueprintTarget(typeof(CampingSpellbook)),
            new BlueprintTarget(typeof(LumberjackingSpellbook)),
            new BlueprintTarget(typeof(AlchemySpellbook)),
            new BlueprintTarget(typeof(FishingSpellbook)),
            new BlueprintTarget(typeof(EvalIntSpellbook)),
            new BlueprintTarget(typeof(ArcherySpellbook)),
            new BlueprintTarget(typeof(MagerySpellbook)),
            new BlueprintTarget(typeof(ArmsLoreSpellbook)),
            new BlueprintTarget(typeof(AnimalTamingSpellbook)),
            new BlueprintTarget(typeof(AnimalLoreSpellbook)),
            new BlueprintTarget(typeof(CarpentrySpellbook)),
            new BlueprintTarget(typeof(CartographySpellbook)),
            new BlueprintTarget(typeof(TasteIDSpellbook)),
            new BlueprintTarget(typeof(CookingSpellbook)),
            new BlueprintTarget(typeof(DiscordanceSpellbook)),
            new BlueprintTarget(typeof(FencingSpellbook)),
            new BlueprintTarget(typeof(FletchingSpellbook)),
            new BlueprintTarget(typeof(ForensicsSpellbook)),
            new BlueprintTarget(typeof(WrestlingSpellbook)),
            new BlueprintTarget(typeof(ParrySpellbook)),
            new BlueprintTarget(typeof(HealingSpellbook)),
            new BlueprintTarget(typeof(DetectHiddenSpellbook)),
            new BlueprintTarget(typeof(ProvocationSpellbook)),
            new BlueprintTarget(typeof(LockpickingSpellbook)),
            new BlueprintTarget(typeof(MacingSpellbook)),
            new BlueprintTarget(typeof(MeditationSpellbook)),
            new BlueprintTarget(typeof(BeggingSpellbook)),
            new BlueprintTarget(typeof(MiningSpellbook)),
            new BlueprintTarget(typeof(ChivalrySpellbook2)),
            new BlueprintTarget(typeof(StealingSpellbook)),
            new BlueprintTarget(typeof(InscribeSpellbook)),
            new BlueprintTarget(typeof(NinjitsuSpellbook)),
            new BlueprintTarget(typeof(HidingSpellbook)),
            new BlueprintTarget(typeof(StealthSpellbook)),
            new BlueprintTarget(typeof(BlacksmithSpellbook)),
            new BlueprintTarget(typeof(TacticsSpellbook)),
            new BlueprintTarget(typeof(SwordsSpellbook)),
            new BlueprintTarget(typeof(TailoringSpellbook)),
            new BlueprintTarget(typeof(NecromancySpellbook)),
            new BlueprintTarget(typeof(TrackingSpellbook)),
            new BlueprintTarget(typeof(RemoveTrapSpellbook)),
            new BlueprintTarget(typeof(VeterinarySpellbook)),
            new BlueprintTarget(typeof(MusicianshipSpellbook)),
            new BlueprintTarget(typeof(CampingSpellbook)),
            new BlueprintTarget(typeof(LumberjackingSpellbook)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicClothing)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomMagicWeapon)),
            new BlueprintTarget(typeof(RandomSkillJewelryA)),
            new BlueprintTarget(typeof(RandomSkillJewelryAA)),
            new BlueprintTarget(typeof(RandomSkillJewelryAB)),
            new BlueprintTarget(typeof(RandomSkillJewelryAC)),
            new BlueprintTarget(typeof(RandomSkillJewelryAD)),
            new BlueprintTarget(typeof(RandomSkillJewelryAE)),
            new BlueprintTarget(typeof(RandomSkillJewelryAF)),
            new BlueprintTarget(typeof(RandomSkillJewelryAG)),
            new BlueprintTarget(typeof(RandomSkillJewelryAH)),
            new BlueprintTarget(typeof(RandomSkillJewelryAI)),
            new BlueprintTarget(typeof(RandomSkillJewelryAJ)),
            new BlueprintTarget(typeof(RandomSkillJewelryAK)),
            new BlueprintTarget(typeof(RandomSkillJewelryAL)),
            new BlueprintTarget(typeof(RandomSkillJewelryAM)),
            new BlueprintTarget(typeof(RandomSkillJewelryAN)),
            new BlueprintTarget(typeof(RandomSkillJewelryAO)),
            new BlueprintTarget(typeof(RandomSkillJewelryAP)),
            new BlueprintTarget(typeof(RandomSkillJewelryB)),
            new BlueprintTarget(typeof(RandomSkillJewelryC)),
            new BlueprintTarget(typeof(RandomSkillJewelryD)),
            new BlueprintTarget(typeof(RandomSkillJewelryE)),
            new BlueprintTarget(typeof(RandomSkillJewelryF)),
            new BlueprintTarget(typeof(RandomSkillJewelryG)),
            new BlueprintTarget(typeof(RandomSkillJewelryH)),
            new BlueprintTarget(typeof(RandomSkillJewelryI)),
            new BlueprintTarget(typeof(RandomSkillJewelryJ)),
            new BlueprintTarget(typeof(RandomSkillJewelryK)),
            new BlueprintTarget(typeof(RandomSkillJewelryL)),
            new BlueprintTarget(typeof(RandomSkillJewelryM)),
            new BlueprintTarget(typeof(RandomSkillJewelryN)),
            new BlueprintTarget(typeof(RandomSkillJewelryO)),
            new BlueprintTarget(typeof(RandomSkillJewelryP)),
            new BlueprintTarget(typeof(RandomSkillJewelryQ)),
            new BlueprintTarget(typeof(RandomSkillJewelryR)),
            new BlueprintTarget(typeof(RandomSkillJewelryS)),
            new BlueprintTarget(typeof(RandomSkillJewelryT)),
            new BlueprintTarget(typeof(RandomSkillJewelryU)),
            new BlueprintTarget(typeof(RandomSkillJewelryV)),
            new BlueprintTarget(typeof(RandomSkillJewelryW)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomSkillJewelryY)),
            new BlueprintTarget(typeof(RandomSkillJewelryZ)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicJewelry)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(RandomMagicArmor)),
            new BlueprintTarget(typeof(AlchemyAugmentCrystal)),
            new BlueprintTarget(typeof(AnatomyAugmentCrystal)),
            new BlueprintTarget(typeof(AnimalLoreAugmentCrystal)),
            new BlueprintTarget(typeof(AnimalTamingAugmentCrystal)),
            new BlueprintTarget(typeof(ArcheryAugmentCrystal)),
            new BlueprintTarget(typeof(ArmsLoreAugmentCrystal)),
            new BlueprintTarget(typeof(ArmSlotChangeDeed)),
            new BlueprintTarget(typeof(BagOfBombs)),
            new BlueprintTarget(typeof(BagOfHealth)),
            new BlueprintTarget(typeof(BagOfJuice)),
            new BlueprintTarget(typeof(BanishingOrb)),
            new BlueprintTarget(typeof(BanishingRod)),
            new BlueprintTarget(typeof(BeggingAugmentCrystal)),
            new BlueprintTarget(typeof(BeltSlotChangeDeed)),
            new BlueprintTarget(typeof(BlacksmithyAugmentCrystal)),
            new BlueprintTarget(typeof(BloodSword)),
            new BlueprintTarget(typeof(BootsOfCommand)),
            new BlueprintTarget(typeof(BraceletSlotChangeDeed)),
            new BlueprintTarget(typeof(BushidoAugmentCrystal)),
            new BlueprintTarget(typeof(CampingAugmentCrystal)),
            new BlueprintTarget(typeof(CapacityIncreaseDeed)),
            new BlueprintTarget(typeof(CarpentryAugmentCrystal)),
            new BlueprintTarget(typeof(CartographyAugmentCrystal)),
            new BlueprintTarget(typeof(ChestSlotChangeDeed)),
            new BlueprintTarget(typeof(ChivalryAugmentCrystal)),
            new BlueprintTarget(typeof(ColdHitAreaCrystal)),
            new BlueprintTarget(typeof(ColdResistAugmentCrystal)),
            new BlueprintTarget(typeof(CookingAugmentCrystal)),
            new BlueprintTarget(typeof(CurseAugmentCrystal)),
            new BlueprintTarget(typeof(DetectingHiddenAugmentCrystal)),
            new BlueprintTarget(typeof(DiscordanceAugmentCrystal)),
            new BlueprintTarget(typeof(DispelAugmentCrystal)),
            new BlueprintTarget(typeof(EarringSlotChangeDeed)),
            new BlueprintTarget(typeof(EnergyHitAreaCrystal)),
            new BlueprintTarget(typeof(EnergyResistAugmentCrystal)),
            new BlueprintTarget(typeof(FatigueAugmentCrystal)),
            new BlueprintTarget(typeof(FencingAugmentCrystal)),
            new BlueprintTarget(typeof(FireballAugmentCrystal)),
            new BlueprintTarget(typeof(FireHitAreaCrystal)),
            new BlueprintTarget(typeof(FireResistAugmentCrystal)),
            new BlueprintTarget(typeof(FishingAugmentCrystal)),
            new BlueprintTarget(typeof(FletchingAugmentCrystal)),
            new BlueprintTarget(typeof(FocusAugmentCrystal)),
            new BlueprintTarget(typeof(FootwearSlotChangeDeed)),
            new BlueprintTarget(typeof(ForensicEvaluationAugmentCrystal)),
            new BlueprintTarget(typeof(GlovesOfCommand)),
            new BlueprintTarget(typeof(HarmAugmentCrystal)),
            new BlueprintTarget(typeof(HeadSlotChangeDeed)),
            new BlueprintTarget(typeof(HealingAugmentCrystal)),
            new BlueprintTarget(typeof(HerdingAugmentCrystal)),
            new BlueprintTarget(typeof(HidingAugmentCrystal)),
            new BlueprintTarget(typeof(ImbuingAugmentCrystal)),
            new BlueprintTarget(typeof(InscriptionAugmentCrystal)),
            new BlueprintTarget(typeof(ItemIdentificationAugmentCrystal)),
            new BlueprintTarget(typeof(JesterHatOfCommand)),
            new BlueprintTarget(typeof(LegsSlotChangeDeed)),
            new BlueprintTarget(typeof(LifeLeechAugmentCrystal)),
            new BlueprintTarget(typeof(LightningAugmentCrystal)),
            new BlueprintTarget(typeof(LockpickingAugmentCrystal)),
            new BlueprintTarget(typeof(LowerAttackAugmentCrystal)),
            new BlueprintTarget(typeof(LuckAugmentCrystal)),
            new BlueprintTarget(typeof(LumberjackingAugmentCrystal)),
            new BlueprintTarget(typeof(MaceFightingAugmentCrystal)),
            new BlueprintTarget(typeof(MageryAugmentCrystal)),
            new BlueprintTarget(typeof(ManaDrainAugmentCrystal)),
            new BlueprintTarget(typeof(ManaLeechAugmentCrystal)),
            new BlueprintTarget(typeof(MaxxiaScroll)),
            new BlueprintTarget(typeof(MeditationAugmentCrystal)),
            new BlueprintTarget(typeof(MiningAugmentCrystal)),
            new BlueprintTarget(typeof(MirrorOfKalandra)),
            new BlueprintTarget(typeof(MusicianshipAugmentCrystal)),
            new BlueprintTarget(typeof(NeckSlotChangeDeed)),
            new BlueprintTarget(typeof(NecromancyAugmentCrystal)),
            new BlueprintTarget(typeof(NinjitsuAugmentCrystal)),
            new BlueprintTarget(typeof(OneHandedTransformDeed)),
            new BlueprintTarget(typeof(ParryingAugmentCrystal)),
            new BlueprintTarget(typeof(PeacemakingAugmentCrystal)),
            new BlueprintTarget(typeof(PhysicalHitAreaCrystal)),
            new BlueprintTarget(typeof(PhysicalResistAugmentCrystal)),
            new BlueprintTarget(typeof(PlateLeggingsOfCommand)),
            new BlueprintTarget(typeof(PoisonHitAreaCrystal)),
            new BlueprintTarget(typeof(PoisoningAugmentCrystal)),
            new BlueprintTarget(typeof(PoisonResistAugmentCrystal)),
            new BlueprintTarget(typeof(ProvocationAugmentCrystal)),
            new BlueprintTarget(typeof(RemoveTrapAugmentCrystal)),
            new BlueprintTarget(typeof(ResistingSpellsAugmentCrystal)),
            new BlueprintTarget(typeof(RingSlotChangeDeed)),
            new BlueprintTarget(typeof(RodOfOrcControl)),
            new BlueprintTarget(typeof(ShirtSlotChangeDeed)),
            new BlueprintTarget(typeof(SnoopingAugmentCrystal)),
            new BlueprintTarget(typeof(SpellweavingAugmentCrystal)),
            new BlueprintTarget(typeof(SpiritSpeakAugmentCrystal)),
            new BlueprintTarget(typeof(StaminaLeechAugmentCrystal)),
            new BlueprintTarget(typeof(StealingAugmentCrystal)),
            new BlueprintTarget(typeof(StealthAugmentCrystal)),
            new BlueprintTarget(typeof(SwingSpeedAugmentCrystal)),
            new BlueprintTarget(typeof(SwordsmanshipAugmentCrystal)),
            new BlueprintTarget(typeof(TacticsAugmentCrystal)),
            new BlueprintTarget(typeof(TailoringAugmentCrystal)),
            new BlueprintTarget(typeof(TalismanSlotChangeDeed)),
            new BlueprintTarget(typeof(TasteIDAugmentCrystal)),
            new BlueprintTarget(typeof(ThrowingAugmentCrystal)),
            new BlueprintTarget(typeof(TinkeringAugmentCrystal)),
            new BlueprintTarget(typeof(TrackingAugmentCrystal)),
            new BlueprintTarget(typeof(VeterinaryAugmentCrystal)),
            new BlueprintTarget(typeof(WeaponSpeedAugmentCrystal)),
            new BlueprintTarget(typeof(WrestlingAugmentCrystal)),
            new BlueprintTarget(typeof(PetBondDeed)),
            new BlueprintTarget(typeof(MythicAmethyst)),
            new BlueprintTarget(typeof(LegendaryAmethyst)),
            new BlueprintTarget(typeof(AncientAmethyst)),
            new BlueprintTarget(typeof(FenCrystal)),
            new BlueprintTarget(typeof(RhoCrystal)),
            new BlueprintTarget(typeof(RysCrystal)),
            new BlueprintTarget(typeof(WyrCrystal)),
            new BlueprintTarget(typeof(FreCrystal)),
            new BlueprintTarget(typeof(TorCrystal)),
            new BlueprintTarget(typeof(VelCrystal)),
            new BlueprintTarget(typeof(XenCrystal)),
            new BlueprintTarget(typeof(PolCrystal)),
            new BlueprintTarget(typeof(WolCrystal)),
            new BlueprintTarget(typeof(BalCrystal)),
            new BlueprintTarget(typeof(TalCrystal)),
            new BlueprintTarget(typeof(JalCrystal)),
            new BlueprintTarget(typeof(RalCrystal)),
            new BlueprintTarget(typeof(KalCrystal)),
            new BlueprintTarget(typeof(MythicDiamond)),
            new BlueprintTarget(typeof(LegendaryDiamond)),
            new BlueprintTarget(typeof(AncientDiamond)),
            new BlueprintTarget(typeof(MythicEmerald)),
            new BlueprintTarget(typeof(LegendaryEmerald)),
            new BlueprintTarget(typeof(AncientEmerald)),
            new BlueprintTarget(typeof(KeyAugment)),
            new BlueprintTarget(typeof(RadiantRhoCrystal)),
            new BlueprintTarget(typeof(RadiantRysCrystal)),
            new BlueprintTarget(typeof(RadiantWyrCrystal)),
            new BlueprintTarget(typeof(RadiantFreCrystal)),
            new BlueprintTarget(typeof(RadiantTorCrystal)),
            new BlueprintTarget(typeof(RadiantVelCrystal)),
            new BlueprintTarget(typeof(RadiantXenCrystal)),
            new BlueprintTarget(typeof(RadiantPolCrystal)),
            new BlueprintTarget(typeof(RadiantWolCrystal)),
            new BlueprintTarget(typeof(RadiantBalCrystal)),
            new BlueprintTarget(typeof(RadiantTalCrystal)),
            new BlueprintTarget(typeof(RadiantJalCrystal)),
            new BlueprintTarget(typeof(RadiantRalCrystal)),
            new BlueprintTarget(typeof(RadiantKalCrystal)),
            new BlueprintTarget(typeof(MythicRuby)),
            new BlueprintTarget(typeof(LegendaryRuby)),
            new BlueprintTarget(typeof(AncientRuby)),
            new BlueprintTarget(typeof(TyrRune)),
            new BlueprintTarget(typeof(AhmRune)),
            new BlueprintTarget(typeof(MorRune)),
            new BlueprintTarget(typeof(MefRune)),
            new BlueprintTarget(typeof(YlmRune)),
            new BlueprintTarget(typeof(KotRune)),
            new BlueprintTarget(typeof(JorRune)),
            new BlueprintTarget(typeof(MythicSapphire)),
            new BlueprintTarget(typeof(LegendarySapphire)),
            new BlueprintTarget(typeof(AncientSapphire)),
            new BlueprintTarget(typeof(MythicSkull)),
            new BlueprintTarget(typeof(AncientSkull)),
            new BlueprintTarget(typeof(LegendarySkull)),
            new BlueprintTarget(typeof(GlimmeringGranite)),
            new BlueprintTarget(typeof(GlimmeringClay)),
            new BlueprintTarget(typeof(GlimmeringHeartstone)),
            new BlueprintTarget(typeof(GlimmeringGypsum)),
            new BlueprintTarget(typeof(GlimmeringIronOre)),
            new BlueprintTarget(typeof(GlimmeringOnyx)),
            new BlueprintTarget(typeof(GlimmeringMarble)),
            new BlueprintTarget(typeof(GlimmeringPetrifiedWood)),
            new BlueprintTarget(typeof(GlimmeringLimestone)),
            new BlueprintTarget(typeof(GlimmeringBloodrock)),
            new BlueprintTarget(typeof(MythicTourmaline)),
            new BlueprintTarget(typeof(LegendaryTourmaline)),
            new BlueprintTarget(typeof(AncientTourmaline)),
            new BlueprintTarget(typeof(MythicWood)),
            new BlueprintTarget(typeof(LegendaryWood)),
            new BlueprintTarget(typeof(BootsOfCommand)),
            new BlueprintTarget(typeof(GlovesOfCommand)),
            new BlueprintTarget(typeof(GrandmastersRobe)),
            new BlueprintTarget(typeof(JesterHatOfCommand)),
            new BlueprintTarget(typeof(PlateLeggingsOfCommand)),
            new BlueprintTarget(typeof(AshAxe)),
            new BlueprintTarget(typeof(BraceletOfNaturesBounty)),
            new BlueprintTarget(typeof(CampersBackpack)),
            new BlueprintTarget(typeof(ExtraPack)),
            new BlueprintTarget(typeof(FrostwoodAxe)),
            new BlueprintTarget(typeof(GoldenCrown)),
            new BlueprintTarget(typeof(MaxxiaScroll)),
            new BlueprintTarget(typeof(GoldenDrakelingScaleShield)),
            new BlueprintTarget(typeof(HeartwoodAxe)),
            new BlueprintTarget(typeof(IcicleStaff)),
            new BlueprintTarget(typeof(LightLordsScepter)),
            new BlueprintTarget(typeof(MasterBall)),
            new BlueprintTarget(typeof(MasterWeaponOil)),
            new BlueprintTarget(typeof(Pokeball)),
            new BlueprintTarget(typeof(ShadowIronShovel)),
            new BlueprintTarget(typeof(StolenTile)),
            new BlueprintTarget(typeof(TrapGloves)),
            new BlueprintTarget(typeof(TrapGorget)),
            new BlueprintTarget(typeof(TrapLegs)),
            new BlueprintTarget(typeof(TrapSleeves)),
            new BlueprintTarget(typeof(TrapTunic)),
            new BlueprintTarget(typeof(WeaponOil)),
            new BlueprintTarget(typeof(WizardKey)),
            new BlueprintTarget(typeof(YewAxe)),
            new BlueprintTarget(typeof(AssassinsDagger)),
            new BlueprintTarget(typeof(BagOfBombs)),
            new BlueprintTarget(typeof(BagOfHealth)),
            new BlueprintTarget(typeof(BagOfJuice)),
            new BlueprintTarget(typeof(BanishingOrb)),
            new BlueprintTarget(typeof(BanishingRod)),
            new BlueprintTarget(typeof(BeggarKingsCrown)),
            new BlueprintTarget(typeof(BloodSword)),
            new BlueprintTarget(typeof(BloodwoodAxe)),
            new BlueprintTarget(typeof(GlovesOfTheGrandmasterThief)),
            new BlueprintTarget(typeof(MagicMasterKey)),
            new BlueprintTarget(typeof(PlantingGloves)),
            new BlueprintTarget(typeof(QuickswordEnilno)),
            new BlueprintTarget(typeof(RodOfOrcControl)),
            new BlueprintTarget(typeof(ScryingOrb)),
            new BlueprintTarget(typeof(SiegeHammer)),
            new BlueprintTarget(typeof(SnoopersMasterScope)),
            new BlueprintTarget(typeof(ThiefsGlove)),
            new BlueprintTarget(typeof(TileExcavatorShovel)),
            new BlueprintTarget(typeof(TomeOfTime)),
            new BlueprintTarget(typeof(UniversalAbsorbingDyeTub)),
            new BlueprintTarget(typeof(AegisOfAthena)),
            new BlueprintTarget(typeof(AegisOfValor)),
            new BlueprintTarget(typeof(AlchemistsAmbition)),
            new BlueprintTarget(typeof(AlchemistsConduit)),
            new BlueprintTarget(typeof(AlchemistsGroundedBoots)),
            new BlueprintTarget(typeof(AlchemistsHeart)),
            new BlueprintTarget(typeof(AlchemistsPreciseGloves)),
            new BlueprintTarget(typeof(AlchemistsResilientLeggings)),
            new BlueprintTarget(typeof(AlchemistsVisionaryHelm)),
            new BlueprintTarget(typeof(ApronOfFlames)),
            new BlueprintTarget(typeof(ArkainesValorArms)),
            new BlueprintTarget(typeof(ArtisansCraftedGauntlets)),
            new BlueprintTarget(typeof(ArtisansHelm)),
            new BlueprintTarget(typeof(AshlandersResilience)),
            new BlueprintTarget(typeof(AstartesBattlePlate)),
            new BlueprintTarget(typeof(AstartesGauntletsOfMight)),
            new BlueprintTarget(typeof(AstartesHelmOfVigilance)),
            new BlueprintTarget(typeof(AstartesShoulderGuard)),
            new BlueprintTarget(typeof(AstartesWarBoots)),
            new BlueprintTarget(typeof(AstartesWarGreaves)),
            new BlueprintTarget(typeof(AtzirisStep)),
            new BlueprintTarget(typeof(AVALANCHEDefender)),
            new BlueprintTarget(typeof(AvatarsVestments)),
            new BlueprintTarget(typeof(BardsNimbleStep)),
            new BlueprintTarget(typeof(BeastmastersCrown)),
            new BlueprintTarget(typeof(BeastmastersGrips)),
            new BlueprintTarget(typeof(BeastsWhisperersRobe)),
            new BlueprintTarget(typeof(BerserkersEmbrace)),
            new BlueprintTarget(typeof(BlackMagesMysticRobe)),
            new BlueprintTarget(typeof(BlackMagesRuneRobe)),
            new BlueprintTarget(typeof(BlacksmithsBurden)),
            new BlueprintTarget(typeof(BlackthornesSpur)),
            new BlueprintTarget(typeof(BladedancersCloseHelm)),
            new BlueprintTarget(typeof(BladedancersOrderShield)),
            new BlueprintTarget(typeof(BladedancersPlateArms)),
            new BlueprintTarget(typeof(BladeDancersPlateChest)),
            new BlueprintTarget(typeof(BladeDancersPlateLegs)),
            new BlueprintTarget(typeof(BlazePlateLegs)),
            new BlueprintTarget(typeof(BombDisposalPlate)),
            new BlueprintTarget(typeof(BootsOfBalladry)),
            new BlueprintTarget(typeof(BootsOfFleetness)),
            new BlueprintTarget(typeof(BootsOfSwiftness)),
            new BlueprintTarget(typeof(BootsOfTheNetherTraveller)),
            new BlueprintTarget(typeof(CarpentersCrown)),
            new BlueprintTarget(typeof(CelesRunebladeBuckler)),
            new BlueprintTarget(typeof(CetrasBlessing)),
            new BlueprintTarget(typeof(ChefsHatOfFocus)),
            new BlueprintTarget(typeof(CourtesansDaintyBuckler)),
            new BlueprintTarget(typeof(CourtesansFlowingRobe)),
            new BlueprintTarget(typeof(CourtesansGracefulHelm)),
            new BlueprintTarget(typeof(CourtesansWhisperingBoots)),
            new BlueprintTarget(typeof(CourtesansWhisperingGloves)),
            new BlueprintTarget(typeof(CourtierDashingBoots)),
            new BlueprintTarget(typeof(CourtiersEnchantedAmulet)),
            new BlueprintTarget(typeof(CourtierSilkenRobe)),
            new BlueprintTarget(typeof(CourtiersRegalCirclet)),
            new BlueprintTarget(typeof(CovensShadowedHood)),
            new BlueprintTarget(typeof(CreepersLeatherCap)),
            new BlueprintTarget(typeof(CrownOfTheAbyss)),
            new BlueprintTarget(typeof(DaedricWarHelm)),
            new BlueprintTarget(typeof(DarkFathersCrown)),
            new BlueprintTarget(typeof(DarkFathersDreadnaughtBoots)),
            new BlueprintTarget(typeof(DarkFathersHeartplate)),
            new BlueprintTarget(typeof(DarkFathersSoulGauntlets)),
            new BlueprintTarget(typeof(DarkFathersVoidLeggings)),
            new BlueprintTarget(typeof(DarkKnightsCursedChestplate)),
            new BlueprintTarget(typeof(DarkKnightsDoomShield)),
            new BlueprintTarget(typeof(DarkKnightsObsidianHelm)),
            new BlueprintTarget(typeof(DarkKnightsShadowedGauntlets)),
            new BlueprintTarget(typeof(DarkKnightsVoidLeggings)),
            new BlueprintTarget(typeof(DemonspikeGuard)),
            new BlueprintTarget(typeof(DespairsShadow)),
            new BlueprintTarget(typeof(Doombringer)),
            new BlueprintTarget(typeof(DragonbornChestplate)),
            new BlueprintTarget(typeof(DragonsBulwark)),
            new BlueprintTarget(typeof(DragoonsAegis)),
            new BlueprintTarget(typeof(DwemerAegis)),
            new BlueprintTarget(typeof(EbonyChainArms)),
            new BlueprintTarget(typeof(EdgarsEngineerChainmail)),
            new BlueprintTarget(typeof(EldarRuneGuard)),
            new BlueprintTarget(typeof(ElixirProtector)),
            new BlueprintTarget(typeof(EmberPlateArms)),
            new BlueprintTarget(typeof(EnderGuardiansChestplate)),
            new BlueprintTarget(typeof(ExodusBarrier)),
            new BlueprintTarget(typeof(FalconersCoif)),
            new BlueprintTarget(typeof(FlamePlateGorget)),
            new BlueprintTarget(typeof(FortunesGorget)),
            new BlueprintTarget(typeof(FortunesHelm)),
            new BlueprintTarget(typeof(FortunesPlateArms)),
            new BlueprintTarget(typeof(FortunesPlateChest)),
            new BlueprintTarget(typeof(FortunesPlateLegs)),
            new BlueprintTarget(typeof(FrostwardensBascinet)),
            new BlueprintTarget(typeof(FrostwardensPlateChest)),
            new BlueprintTarget(typeof(FrostwardensPlateGloves)),
            new BlueprintTarget(typeof(FrostwardensPlateLegs)),
            new BlueprintTarget(typeof(FrostwardensWoodenShield)),
            new BlueprintTarget(typeof(GauntletsOfPrecision)),
            new BlueprintTarget(typeof(GauntletsOfPurity)),
            new BlueprintTarget(typeof(GauntletsOfTheWild)),
            new BlueprintTarget(typeof(GloomfangChain)),
            new BlueprintTarget(typeof(GlovesOfTheSilentAssassin)),
            new BlueprintTarget(typeof(GlovesOfTransmutation)),
            new BlueprintTarget(typeof(GoronsGauntlets)),
            new BlueprintTarget(typeof(GreyWanderersStride)),
            new BlueprintTarget(typeof(GuardianAngelArms)),
            new BlueprintTarget(typeof(GuardianOfTheAbyss)),
            new BlueprintTarget(typeof(GuardiansHeartplate)),
            new BlueprintTarget(typeof(GuardiansHelm)),
            new BlueprintTarget(typeof(HammerlordsArmguards)),
            new BlueprintTarget(typeof(HammerlordsChestplate)),
            new BlueprintTarget(typeof(HammerlordsHelm)),
            new BlueprintTarget(typeof(HammerlordsLegplates)),
            new BlueprintTarget(typeof(HammerlordsShield)),
            new BlueprintTarget(typeof(HarmonyGauntlets)),
            new BlueprintTarget(typeof(HarmonysGuard)),
            new BlueprintTarget(typeof(HarvestersFootsteps)),
            new BlueprintTarget(typeof(HarvestersGrasp)),
            new BlueprintTarget(typeof(HarvestersGuard)),
            new BlueprintTarget(typeof(HarvestersHelm)),
            new BlueprintTarget(typeof(HarvestersStride)),
            new BlueprintTarget(typeof(HexweaversMysticalGloves)),
            new BlueprintTarget(typeof(HlaaluTradersCuffs)),
            new BlueprintTarget(typeof(HyruleKnightsShield)),
            new BlueprintTarget(typeof(ImmortalKingsIronCrown)),
            new BlueprintTarget(typeof(InfernoPlateChest)),
            new BlueprintTarget(typeof(InquisitorsGuard)),
            new BlueprintTarget(typeof(IstarisTouch)),
            new BlueprintTarget(typeof(JestersGleefulGloves)),
            new BlueprintTarget(typeof(JestersMerryCap)),
            new BlueprintTarget(typeof(JestersMischievousBuckler)),
            new BlueprintTarget(typeof(JestersPlayfulTunic)),
            new BlueprintTarget(typeof(JestersTricksterBoots)),
            new BlueprintTarget(typeof(KnightsAegis)),
            new BlueprintTarget(typeof(KnightsValorShield)),
            new BlueprintTarget(typeof(LeggingsOfTheRighteous)),
            new BlueprintTarget(typeof(LioneyesRemorse)),
            new BlueprintTarget(typeof(LionheartPlate)),
            new BlueprintTarget(typeof(LockesAdventurerLeather)),
            new BlueprintTarget(typeof(LocksleyLeatherChest)),
            new BlueprintTarget(typeof(LyricalGreaves)),
            new BlueprintTarget(typeof(LyricistsInsight)),
            new BlueprintTarget(typeof(MagitekInfusedPlate)),
            new BlueprintTarget(typeof(MakoResonance)),
            new BlueprintTarget(typeof(MaskedAvengersAgility)),
            new BlueprintTarget(typeof(MaskedAvengersDefense)),
            new BlueprintTarget(typeof(MaskedAvengersFocus)),
            new BlueprintTarget(typeof(MaskedAvengersPrecision)),
            new BlueprintTarget(typeof(MaskedAvengersVoice)),
            new BlueprintTarget(typeof(MelodicCirclet)),
            new BlueprintTarget(typeof(MerryMensStuddedGloves)),
            new BlueprintTarget(typeof(MeteorWard)),
            new BlueprintTarget(typeof(MinersHelmet)),
            new BlueprintTarget(typeof(MinstrelsMelody)),
            new BlueprintTarget(typeof(MisfortunesChains)),
            new BlueprintTarget(typeof(MondainsSkull)),
            new BlueprintTarget(typeof(MonksBattleWraps)),
            new BlueprintTarget(typeof(MonksSoulGloves)),
            new BlueprintTarget(typeof(MysticSeersPlate)),
            new BlueprintTarget(typeof(MysticsGuard)),
            new BlueprintTarget(typeof(NajsArcaneVestment)),
            new BlueprintTarget(typeof(NaturesEmbraceBelt)),
            new BlueprintTarget(typeof(NaturesEmbraceHelm)),
            new BlueprintTarget(typeof(NaturesGuardBoots)),
            new BlueprintTarget(typeof(NecklaceOfAromaticProtection)),
            new BlueprintTarget(typeof(NecromancersBoneGrips)),
            new BlueprintTarget(typeof(NecromancersDarkLeggings)),
            new BlueprintTarget(typeof(NecromancersHood)),
            new BlueprintTarget(typeof(NecromancersRobe)),
            new BlueprintTarget(typeof(NecromancersShadowBoots)),
            new BlueprintTarget(typeof(NightingaleVeil)),
            new BlueprintTarget(typeof(NinjaWrappings)),
            new BlueprintTarget(typeof(NottinghamStalkersLeggings)),
            new BlueprintTarget(typeof(OrkArdHat)),
            new BlueprintTarget(typeof(OutlawsForestBuckler)),
            new BlueprintTarget(typeof(PhilosophersGreaves)),
            new BlueprintTarget(typeof(PyrePlateHelm)),
            new BlueprintTarget(typeof(RadiantCrown)),
            new BlueprintTarget(typeof(RatsNest)),
            new BlueprintTarget(typeof(ReconnaissanceBoots)),
            new BlueprintTarget(typeof(RedoranDefendersGreaves)),
            new BlueprintTarget(typeof(RedstoneArtificersGloves)),
            new BlueprintTarget(typeof(RiotDefendersShield)),
            new BlueprintTarget(typeof(RoguesShadowBoots)),
            new BlueprintTarget(typeof(RoguesStealthShield)),
            new BlueprintTarget(typeof(RoyalCircletHelm)),
            new BlueprintTarget(typeof(SabatonsOfDawn)),
            new BlueprintTarget(typeof(SerenadesEmbrace)),
            new BlueprintTarget(typeof(SerpentScaleArmor)),
            new BlueprintTarget(typeof(SerpentsEmbrace)),
            new BlueprintTarget(typeof(ShadowGripGloves)),
            new BlueprintTarget(typeof(ShaftstopArmor)),
            new BlueprintTarget(typeof(ShaminosGreaves)),
            new BlueprintTarget(typeof(SherwoodArchersCap)),
            new BlueprintTarget(typeof(ShinobiHood)),
            new BlueprintTarget(typeof(ShurikenBracers)),
            new BlueprintTarget(typeof(SilentStepTabi)),
            new BlueprintTarget(typeof(SilksOfTheVictor)),
            new BlueprintTarget(typeof(SirensLament)),
            new BlueprintTarget(typeof(SirensResonance)),
            new BlueprintTarget(typeof(SkinOfTheVipermagi)),
            new BlueprintTarget(typeof(SlitheringSeal)),
            new BlueprintTarget(typeof(SolarisAegis)),
            new BlueprintTarget(typeof(SolarisLorica)),
            new BlueprintTarget(typeof(SOLDIERSMight)),
            new BlueprintTarget(typeof(SorrowsGrasp)),
            new BlueprintTarget(typeof(StealthOperatorsGear)),
            new BlueprintTarget(typeof(StormcrowsGaze)),
            new BlueprintTarget(typeof(StormforgedBoots)),
            new BlueprintTarget(typeof(StormforgedGauntlets)),
            new BlueprintTarget(typeof(StormforgedHelm)),
            new BlueprintTarget(typeof(StormforgedLeggings)),
            new BlueprintTarget(typeof(StormforgedPlateChest)),
            new BlueprintTarget(typeof(Stormshield)),
            new BlueprintTarget(typeof(StringOfEars)),
            new BlueprintTarget(typeof(SummonersEmbrace)),
            new BlueprintTarget(typeof(TabulaRasa)),
            new BlueprintTarget(typeof(TacticalVest)),
            new BlueprintTarget(typeof(TailorsTouch)),
            new BlueprintTarget(typeof(TalsRashasRelic)),
            new BlueprintTarget(typeof(TamersBindings)),
            new BlueprintTarget(typeof(TechPriestMantle)),
            new BlueprintTarget(typeof(TelvanniMagistersCap)),
            new BlueprintTarget(typeof(TerrasMysticRobe)),
            new BlueprintTarget(typeof(TheThinkingCap)),
            new BlueprintTarget(typeof(ThiefsNimbleCap)),
            new BlueprintTarget(typeof(ThievesGuildPants)),
            new BlueprintTarget(typeof(ThundergodsVigor)),
            new BlueprintTarget(typeof(TinkersTreads)),
            new BlueprintTarget(typeof(ToxinWard)),
            new BlueprintTarget(typeof(TunicOfTheWild)),
            new BlueprintTarget(typeof(TyraelsVigil)),
            new BlueprintTarget(typeof(ValkyriesWard)),
            new BlueprintTarget(typeof(VeilOfSteel)),
            new BlueprintTarget(typeof(Venomweave)),
            new BlueprintTarget(typeof(VialWarden)),
            new BlueprintTarget(typeof(VipersCoif)),
            new BlueprintTarget(typeof(VirtueGuard)),
            new BlueprintTarget(typeof(VortexMantle)),
            new BlueprintTarget(typeof(VyrsGraspingGauntlets)),
            new BlueprintTarget(typeof(WardensAegis)),
            new BlueprintTarget(typeof(WhispersHeartguard)),
            new BlueprintTarget(typeof(WhiteMagesDivineVestment)),
            new BlueprintTarget(typeof(WhiteRidersGuard)),
            new BlueprintTarget(typeof(WhiteSageCap)),
            new BlueprintTarget(typeof(WildwalkersGreaves)),
            new BlueprintTarget(typeof(WinddancerBoots)),
            new BlueprintTarget(typeof(WisdomsCirclet)),
            new BlueprintTarget(typeof(WisdomsEmbrace)),
            new BlueprintTarget(typeof(WitchesBindingGloves)),
            new BlueprintTarget(typeof(WitchesCursedRobe)),
            new BlueprintTarget(typeof(WitchesEnchantedHat)),
            new BlueprintTarget(typeof(WitchesEnchantedRobe)),
            new BlueprintTarget(typeof(WitchesHeartAmulet)),
            new BlueprintTarget(typeof(WitchesWhisperingBoots)),
            new BlueprintTarget(typeof(WitchfireShield)),
            new BlueprintTarget(typeof(WitchwoodGreaves)),
            new BlueprintTarget(typeof(WraithsBane)),
            new BlueprintTarget(typeof(WrestlersArmsOfPrecision)),
            new BlueprintTarget(typeof(WrestlersChestOfPower)),
            new BlueprintTarget(typeof(WrestlersGrippingGloves)),
            new BlueprintTarget(typeof(WrestlersHelmOfFocus)),
            new BlueprintTarget(typeof(WrestlersLeggingsOfBalance)),
            new BlueprintTarget(typeof(ZorasFins)),
            new BlueprintTarget(typeof(AdventurersBoots)),
            new BlueprintTarget(typeof(AerobicsInstructorsLegwarmers)),
            new BlueprintTarget(typeof(AmbassadorsCloak)),
            new BlueprintTarget(typeof(AnglersSeabreezeCloak)),
            new BlueprintTarget(typeof(ArchivistsShoes)),
            new BlueprintTarget(typeof(ArrowsmithsSturdyBoots)),
            new BlueprintTarget(typeof(ArtisansTimberShoes)),
            new BlueprintTarget(typeof(AssassinsBandana)),
            new BlueprintTarget(typeof(AssassinsMaskedCap)),
            new BlueprintTarget(typeof(BaggyHipHopPants)),
            new BlueprintTarget(typeof(BakersSoftShoes)),
            new BlueprintTarget(typeof(BalladeersMuffler)),
            new BlueprintTarget(typeof(BanditsHiddenCloak)),
            new BlueprintTarget(typeof(BardOfErinsMuffler)),
            new BlueprintTarget(typeof(BardsTunicOfStonehenge)),
            new BlueprintTarget(typeof(BaristasMuffler)),
            new BlueprintTarget(typeof(BeastmastersTanic)),
            new BlueprintTarget(typeof(BeastmastersTonic)),
            new BlueprintTarget(typeof(BeastmastersTunic)),
            new BlueprintTarget(typeof(BeastmiastersTunic)),
            new BlueprintTarget(typeof(BeatniksBeret)),
            new BlueprintTarget(typeof(BeggarsLuckyBandana)),
            new BlueprintTarget(typeof(BlacksmithsReinforcedGloves)),
            new BlueprintTarget(typeof(BobbySoxersShoes)),
            new BlueprintTarget(typeof(BohoChicSundress)),
            new BlueprintTarget(typeof(BootsOfTheDeepCaverns)),
            new BlueprintTarget(typeof(BowcraftersProtectiveCloak)),
            new BlueprintTarget(typeof(BowyersInsightfulBandana)),
            new BlueprintTarget(typeof(BreakdancersCap)),
            new BlueprintTarget(typeof(CarpentersStalwartTunic)),
            new BlueprintTarget(typeof(CartographersExploratoryTunic)),
            new BlueprintTarget(typeof(CartographersHat)),
            new BlueprintTarget(typeof(CeltidDruidsRobe)),
            new BlueprintTarget(typeof(ChampagneToastTunic)),
            new BlueprintTarget(typeof(ChefsGourmetApron)),
            new BlueprintTarget(typeof(ClericsSacredSash)),
            new BlueprintTarget(typeof(CourtesansGracefulKimono)),
            new BlueprintTarget(typeof(CourtisansRefinedGown)),
            new BlueprintTarget(typeof(CouturiersSundress)),
            new BlueprintTarget(typeof(CraftsmansProtectiveGloves)),
            new BlueprintTarget(typeof(CropTopMystic)),
            new BlueprintTarget(typeof(CuratorsKilt)),
            new BlueprintTarget(typeof(CyberpunkNinjaTabi)),
            new BlueprintTarget(typeof(DancersEnchantedSkirt)),
            new BlueprintTarget(typeof(DapperFedoraOfInsight)),
            new BlueprintTarget(typeof(DarkLordsRobe)),
            new BlueprintTarget(typeof(DataMagesDigitalCloak)),
            new BlueprintTarget(typeof(DeepSeaTunic)),
            new BlueprintTarget(typeof(DenimJacketOfReflection)),
            new BlueprintTarget(typeof(DiplomatsTunic)),
            new BlueprintTarget(typeof(DiscoDivaBoots)),
            new BlueprintTarget(typeof(ElementalistsProtectiveCloak)),
            new BlueprintTarget(typeof(ElvenSnowBoots)),
            new BlueprintTarget(typeof(EmoSceneHairpin)),
            new BlueprintTarget(typeof(ExplorersBoots)),
            new BlueprintTarget(typeof(FilmNoirDetectivesTrenchCoat)),
            new BlueprintTarget(typeof(FishermansSunHat)),
            new BlueprintTarget(typeof(FishermansVest)),
            new BlueprintTarget(typeof(FishmongersKilt)),
            new BlueprintTarget(typeof(FletchersPrecisionGloves)),
            new BlueprintTarget(typeof(FlowerChildSundress)),
            new BlueprintTarget(typeof(ForestersTunic)),
            new BlueprintTarget(typeof(ForgeMastersBoots)),
            new BlueprintTarget(typeof(GazeCapturingVeil)),
            new BlueprintTarget(typeof(GeishasGracefulKasa)),
            new BlueprintTarget(typeof(GhostlyShroud)),
            new BlueprintTarget(typeof(GlamRockersJacket)),
            new BlueprintTarget(typeof(GlovesOfStonemasonry)),
            new BlueprintTarget(typeof(GoGoBootsOfAgility)),
            new BlueprintTarget(typeof(GrapplersTunic)),
            new BlueprintTarget(typeof(GreenwichMagesRobe)),
            new BlueprintTarget(typeof(GroovyBellBottomPants)),
            new BlueprintTarget(typeof(GrungeBandana)),
            new BlueprintTarget(typeof(HackersVRGoggles)),
            new BlueprintTarget(typeof(HammerlordsCap)),
            new BlueprintTarget(typeof(HarmonistsSoftShoes)),
            new BlueprintTarget(typeof(HealersBlessedSandals)),
            new BlueprintTarget(typeof(HealersFurCape)),
            new BlueprintTarget(typeof(HelmetOfTheOreWhisperer)),
            new BlueprintTarget(typeof(HerbalistsProtectiveHat)),
            new BlueprintTarget(typeof(HerdersMuffler)),
            new BlueprintTarget(typeof(HippiePeaceBandana)),
            new BlueprintTarget(typeof(HippiesPeacefulSandals)),
            new BlueprintTarget(typeof(IntriguersFeatheredHat)),
            new BlueprintTarget(typeof(JazzMusiciansMuffler)),
            new BlueprintTarget(typeof(KnightsHelmOfTheRoundTable)),
            new BlueprintTarget(typeof(LeprechaunsLuckyHat)),
            new BlueprintTarget(typeof(LorekeepersSash)),
            new BlueprintTarget(typeof(LuchadorsMask)),
            new BlueprintTarget(typeof(MapmakersInsightfulMuffler)),
            new BlueprintTarget(typeof(MarinersLuckyBoots)),
            new BlueprintTarget(typeof(MelodiousMuffler)),
            new BlueprintTarget(typeof(MendersDivineRobe)),
            new BlueprintTarget(typeof(MidnightRevelersBoots)),
            new BlueprintTarget(typeof(MinersSturdyBoots)),
            new BlueprintTarget(typeof(MinstrelsTunedTunic)),
            new BlueprintTarget(typeof(MistletoeMuffler)),
            new BlueprintTarget(typeof(ModStyleTunic)),
            new BlueprintTarget(typeof(MoltenCloak)),
            new BlueprintTarget(typeof(MonksMeditativeRobe)),
            new BlueprintTarget(typeof(MummysWrappings)),
            new BlueprintTarget(typeof(MysticsFeatheredHat)),
            new BlueprintTarget(typeof(NaturalistsCloak)),
            new BlueprintTarget(typeof(NaturesMuffler)),
            new BlueprintTarget(typeof(NavigatorsProtectiveCap)),
            new BlueprintTarget(typeof(NecromancersCape)),
            new BlueprintTarget(typeof(NeonStreetSash)),
            new BlueprintTarget(typeof(NewWaveNeonShades)),
            new BlueprintTarget(typeof(NinjasKasa)),
            new BlueprintTarget(typeof(NinjasStealthyTabi)),
            new BlueprintTarget(typeof(OreSeekersBandana)),
            new BlueprintTarget(typeof(PickpocketsNimbleGloves)),
            new BlueprintTarget(typeof(PickpocketsSleekTunic)),
            new BlueprintTarget(typeof(PinUpHalterDress)),
            new BlueprintTarget(typeof(PlatformSneakers)),
            new BlueprintTarget(typeof(PoodleSkirtOfCharm)),
            new BlueprintTarget(typeof(PopStarsFingerlessGloves)),
            new BlueprintTarget(typeof(PopStarsGlitteringCap)),
            new BlueprintTarget(typeof(PopStarsSparklingBandana)),
            new BlueprintTarget(typeof(PreserversCap)),
            new BlueprintTarget(typeof(PsychedelicTieDyeShirt)),
            new BlueprintTarget(typeof(PsychedelicWizardsHat)),
            new BlueprintTarget(typeof(PumpkinKingsCrown)),
            new BlueprintTarget(typeof(QuivermastersTunic)),
            new BlueprintTarget(typeof(RangersCap)),
            new BlueprintTarget(typeof(RangersHat)),
            new BlueprintTarget(typeof(RangersHatNightSight)),
            new BlueprintTarget(typeof(ReindeerFurCap)),
            new BlueprintTarget(typeof(ResolutionKeepersSash)),
            new BlueprintTarget(typeof(RingmastersSandals)),
            new BlueprintTarget(typeof(RockabillyRebelJacket)),
            new BlueprintTarget(typeof(RoguesDeceptiveMask)),
            new BlueprintTarget(typeof(RoguesShadowCloak)),
            new BlueprintTarget(typeof(RoyalGuardsBoots)),
            new BlueprintTarget(typeof(SamuraisHonorableTunic)),
            new BlueprintTarget(typeof(SantasEnchantedRobe)),
            new BlueprintTarget(typeof(SawyersMightyApron)),
            new BlueprintTarget(typeof(ScholarsRobe)),
            new BlueprintTarget(typeof(ScoutsWideBrimHat)),
            new BlueprintTarget(typeof(ScribersRobe)),
            new BlueprintTarget(typeof(ScribesEnlightenedSandals)),
            new BlueprintTarget(typeof(ScriptoriumMastersRobe)),
            new BlueprintTarget(typeof(SeductressSilkenShoes)),
            new BlueprintTarget(typeof(SeersMysticSash)),
            new BlueprintTarget(typeof(ShadowWalkersTabi)),
            new BlueprintTarget(typeof(ShanachiesStorytellingShoes)),
            new BlueprintTarget(typeof(ShepherdsKilt)),
            new BlueprintTarget(typeof(SherlocksSleuthingCap)),
            new BlueprintTarget(typeof(ShogunsAuthoritativeSurcoat)),
            new BlueprintTarget(typeof(SilentNightCloak)),
            new BlueprintTarget(typeof(SkatersBaggyPants)),
            new BlueprintTarget(typeof(SmithsProtectiveTunic)),
            new BlueprintTarget(typeof(SneaksSilentShoes)),
            new BlueprintTarget(typeof(SnoopersSoftGloves)),
            new BlueprintTarget(typeof(SommelierBodySash)),
            new BlueprintTarget(typeof(SorceressMidnightRobe)),
            new BlueprintTarget(typeof(SpellweaversEnchantedShoes)),
            new BlueprintTarget(typeof(StarletsFancyDress)),
            new BlueprintTarget(typeof(StarlightWizardsHat)),
            new BlueprintTarget(typeof(StarlightWozardsHat)),
            new BlueprintTarget(typeof(StreetArtistsBaggyPants)),
            new BlueprintTarget(typeof(StreetPerformersCap)),
            new BlueprintTarget(typeof(SubmissionsArtistsMuffler)),
            new BlueprintTarget(typeof(SurgeonsInsightfulMask)),
            new BlueprintTarget(typeof(SwingsDancersShoes)),
            new BlueprintTarget(typeof(TailorsFancyApron)),
            new BlueprintTarget(typeof(TamersKilt)),
            new BlueprintTarget(typeof(TamersMuffler)),
            new BlueprintTarget(typeof(TechGurusGlasses)),
            new BlueprintTarget(typeof(TechnomancersHoodie)),
            new BlueprintTarget(typeof(ThiefsShadowTunic)),
            new BlueprintTarget(typeof(ThiefsSilentShoes)),
            new BlueprintTarget(typeof(TidecallersSandals)),
            new BlueprintTarget(typeof(TruckersIconicCap)),
            new BlueprintTarget(typeof(UrbanitesSneakers)),
            new BlueprintTarget(typeof(VampiresMidnightCloak)),
            new BlueprintTarget(typeof(VestOfTheVeinSeeker)),
            new BlueprintTarget(typeof(WarHeronsCap)),
            new BlueprintTarget(typeof(WarriorOfUlstersTunic)),
            new BlueprintTarget(typeof(WarriorsBelt)),
            new BlueprintTarget(typeof(WhisperersBoots)),
            new BlueprintTarget(typeof(WhisperersSandals)),
            new BlueprintTarget(typeof(WhisperingSandals)),
            new BlueprintTarget(typeof(WhisperingSondals)),
            new BlueprintTarget(typeof(WhisperingWindSash)),
            new BlueprintTarget(typeof(WitchesBewitchingRobe)),
            new BlueprintTarget(typeof(WitchesBrewedHat)),
            new BlueprintTarget(typeof(WoodworkersInsightfulCap)),
            new BlueprintTarget(typeof(AegisShield)),
            new BlueprintTarget(typeof(AeonianBow)),
            new BlueprintTarget(typeof(AlamoDefendersAxe)),
            new BlueprintTarget(typeof(AlucardsBlade)),
            new BlueprintTarget(typeof(AnubisWarMace)),
            new BlueprintTarget(typeof(ApepsCoiledScimitar)),
            new BlueprintTarget(typeof(ApollosSong)),
            new BlueprintTarget(typeof(ArchersYewBow)),
            new BlueprintTarget(typeof(AssassinsKryss)),
            new BlueprintTarget(typeof(AtmaBlade)),
            new BlueprintTarget(typeof(AxeOfTheJuggernaut)),
            new BlueprintTarget(typeof(AxeOfTheRuneweaver)),
            new BlueprintTarget(typeof(BaneOfTheDead)),
            new BlueprintTarget(typeof(BanshoFanClub)),
            new BlueprintTarget(typeof(BarbarossaScimitar)),
            new BlueprintTarget(typeof(BardsBowOfDiscord)),
            new BlueprintTarget(typeof(BeowulfsWarAxe)),
            new BlueprintTarget(typeof(BismarckianWarAxe)),
            new BlueprintTarget(typeof(Blackrazor)),
            new BlueprintTarget(typeof(BlacksmithsWarHammer)),
            new BlueprintTarget(typeof(BlackSwordOfMondain)),
            new BlueprintTarget(typeof(BlackTailWhip)),
            new BlueprintTarget(typeof(BladeOfTheStars)),
            new BlueprintTarget(typeof(Bonehew)),
            new BlueprintTarget(typeof(BowiesLegacy)),
            new BlueprintTarget(typeof(BowOfAuriel)),
            new BlueprintTarget(typeof(BowOfIsrafil)),
            new BlueprintTarget(typeof(BowspritOfBluenose)),
            new BlueprintTarget(typeof(BulKathosTribalGuardian)),
            new BlueprintTarget(typeof(BusterSwordReplica)),
            new BlueprintTarget(typeof(ButchersCleaver)),
            new BlueprintTarget(typeof(CaduceusStaff)),
            new BlueprintTarget(typeof(CelestialLongbow)),
            new BlueprintTarget(typeof(CelestialScimitar)),
            new BlueprintTarget(typeof(CetrasStaff)),
            new BlueprintTarget(typeof(ChakramBlade)),
            new BlueprintTarget(typeof(CharlemagnesWarAxe)),
            new BlueprintTarget(typeof(CherubsBlade)),
            new BlueprintTarget(typeof(ChillrendLongsword)),
            new BlueprintTarget(typeof(ChuKoNu)),
            new BlueprintTarget(typeof(CrissaegrimEdge)),
            new BlueprintTarget(typeof(CthulhusGaze)),
            new BlueprintTarget(typeof(CursedArmorCleaver)),
            new BlueprintTarget(typeof(CustersLastStandBow)),
            new BlueprintTarget(typeof(DaggerOfShadows)),
            new BlueprintTarget(typeof(DavidsSling)),
            new BlueprintTarget(typeof(DawnbreakerMace)),
            new BlueprintTarget(typeof(DeadMansLegacy)),
            new BlueprintTarget(typeof(DestructoDiscDagger)),
            new BlueprintTarget(typeof(DianasMoonBow)),
            new BlueprintTarget(typeof(DoomfletchsPrism)),
            new BlueprintTarget(typeof(Doomsickle)),
            new BlueprintTarget(typeof(DragonClaw)),
            new BlueprintTarget(typeof(DragonsBreath)),
            new BlueprintTarget(typeof(DragonsBreathWarAxe)),
            new BlueprintTarget(typeof(DragonsScaleDagger)),
            new BlueprintTarget(typeof(DragonsWrath)),
            new BlueprintTarget(typeof(Dreamseeker)),
            new BlueprintTarget(typeof(EarthshakerMaul)),
            new BlueprintTarget(typeof(EbonyWarAxeOfVampires)),
            new BlueprintTarget(typeof(EldritchBowOfShadows)),
            new BlueprintTarget(typeof(EldritchWhisper)),
            new BlueprintTarget(typeof(ErdricksBlade)),
            new BlueprintTarget(typeof(Excalibur)),
            new BlueprintTarget(typeof(ExcaliburLongsword)),
            new BlueprintTarget(typeof(ExcalibursLegacy)),
            new BlueprintTarget(typeof(FangOfStorms)),
            new BlueprintTarget(typeof(FlamebaneWarAxe)),
            new BlueprintTarget(typeof(FrostfireCleaver)),
            new BlueprintTarget(typeof(FrostflameKatana)),
            new BlueprintTarget(typeof(FuHaosBattleAxe)),
            new BlueprintTarget(typeof(GenjiBow)),
            new BlueprintTarget(typeof(GeomancersStaff)),
            new BlueprintTarget(typeof(GhoulSlayersLongsword)),
            new BlueprintTarget(typeof(GlassSword)),
            new BlueprintTarget(typeof(GlassSwordOfValor)),
            new BlueprintTarget(typeof(GoldbrandScimitar)),
            new BlueprintTarget(typeof(GreenDragonCrescentBlade)),
            new BlueprintTarget(typeof(Grimmblade)),
            new BlueprintTarget(typeof(GrimReapersCleaver)),
            new BlueprintTarget(typeof(GriswoldsEdge)),
            new BlueprintTarget(typeof(GrognaksAxe)),
            new BlueprintTarget(typeof(GuardianOfTheFey)),
            new BlueprintTarget(typeof(GuillotineBladeDagger)),
            new BlueprintTarget(typeof(HalberdOfHonesty)),
            new BlueprintTarget(typeof(HanseaticCrossbow)),
            new BlueprintTarget(typeof(HarmonyBow)),
            new BlueprintTarget(typeof(HarpeBlade)),
            new BlueprintTarget(typeof(HeartbreakerSunder)),
            new BlueprintTarget(typeof(HelmOfDarkness)),
            new BlueprintTarget(typeof(IlluminaDagger)),
            new BlueprintTarget(typeof(InuitUluOfTheNorth)),
            new BlueprintTarget(typeof(JoansDivineLongsword)),
            new BlueprintTarget(typeof(JuggernautHammer)),
            new BlueprintTarget(typeof(KaomsCleaver)),
            new BlueprintTarget(typeof(KaomsMaul)),
            new BlueprintTarget(typeof(Keenstrike)),
            new BlueprintTarget(typeof(KhufusWarSpear)),
            new BlueprintTarget(typeof(KingsSwordOfHaste)),
            new BlueprintTarget(typeof(MaatsBalancedBow)),
            new BlueprintTarget(typeof(MablungsDefender)),
            new BlueprintTarget(typeof(MaceOfTheVoid)),
            new BlueprintTarget(typeof(MageMasher)),
            new BlueprintTarget(typeof(MageMusher)),
            new BlueprintTarget(typeof(MagesStaff)),
            new BlueprintTarget(typeof(MagicAxeOfGreatStrength)),
            new BlueprintTarget(typeof(MagusRod)),
            new BlueprintTarget(typeof(MakhairaOfAchilles)),
            new BlueprintTarget(typeof(ManajumasKnife)),
            new BlueprintTarget(typeof(MarssBattleAxeOfValor)),
            new BlueprintTarget(typeof(MasamuneBlade)),
            new BlueprintTarget(typeof(MasamuneKatana)),
            new BlueprintTarget(typeof(MasamunesEdge)),
            new BlueprintTarget(typeof(MasamunesGrace)),
            new BlueprintTarget(typeof(MaulOfSulayman)),
            new BlueprintTarget(typeof(MehrunesCleaver)),
            new BlueprintTarget(typeof(MortuarySword)),
            new BlueprintTarget(typeof(MosesStaff)),
            new BlueprintTarget(typeof(MuramasasBloodlust)),
            new BlueprintTarget(typeof(MusketeersRapier)),
            new BlueprintTarget(typeof(MysticBowOfLight)),
            new BlueprintTarget(typeof(MysticStaffOfElements)),
            new BlueprintTarget(typeof(NaginataOfTomoeGozen)),
            new BlueprintTarget(typeof(NebulaBow)),
            new BlueprintTarget(typeof(NecromancersDagger)),
            new BlueprintTarget(typeof(NeptunesTrident)),
            new BlueprintTarget(typeof(NormanConquerorsBow)),
            new BlueprintTarget(typeof(PaladinsChrysblade)),
            new BlueprintTarget(typeof(PlasmaInfusedWarHammer)),
            new BlueprintTarget(typeof(PlutosAbyssalMace)),
            new BlueprintTarget(typeof(PotaraEarringClub)),
            new BlueprintTarget(typeof(PowerPoleHalberd)),
            new BlueprintTarget(typeof(PowersBeacon)),
            new BlueprintTarget(typeof(ProhibitionClub)),
            new BlueprintTarget(typeof(QamarDagger)),
            new BlueprintTarget(typeof(QuasarAxe)),
            new BlueprintTarget(typeof(RainbowBlade)),
            new BlueprintTarget(typeof(RasSearingDagger)),
            new BlueprintTarget(typeof(ReflectionShield)),
            new BlueprintTarget(typeof(RevolutionarySabre)),
            new BlueprintTarget(typeof(RielsRebellionSabre)),
            new BlueprintTarget(typeof(RuneAss)),
            new BlueprintTarget(typeof(RuneAxe)),
            new BlueprintTarget(typeof(SaiyanTailWhip)),
            new BlueprintTarget(typeof(SamsonsJawbone)),
            new BlueprintTarget(typeof(SaxonSeax)),
            new BlueprintTarget(typeof(SearingTouch)),
            new BlueprintTarget(typeof(SerpentsFang)),
            new BlueprintTarget(typeof(SerpentsVenomDagger)),
            new BlueprintTarget(typeof(ShadowstrideBow)),
            new BlueprintTarget(typeof(ShavronnesRapier)),
            new BlueprintTarget(typeof(SkyPiercer)),
            new BlueprintTarget(typeof(SoulTaker)),
            new BlueprintTarget(typeof(StaffOfAeons)),
            new BlueprintTarget(typeof(StaffOfApocalypse)),
            new BlueprintTarget(typeof(StaffOfRainsWrath)),
            new BlueprintTarget(typeof(StaffOfTheElements)),
            new BlueprintTarget(typeof(StarfallDagger)),
            new BlueprintTarget(typeof(Sunblade)),
            new BlueprintTarget(typeof(SwordOfAlBattal)),
            new BlueprintTarget(typeof(SwordOfGideon)),
            new BlueprintTarget(typeof(TabulasDagger)),
            new BlueprintTarget(typeof(TantoOfThe47Ronin)),
            new BlueprintTarget(typeof(TempestHammer)),
            new BlueprintTarget(typeof(TeutonicWarMace)),
            new BlueprintTarget(typeof(TheFurnace)),
            new BlueprintTarget(typeof(TheOculus)),
            new BlueprintTarget(typeof(ThorsHammer)),
            new BlueprintTarget(typeof(Thunderfury)),
            new BlueprintTarget(typeof(Thunderstroke)),
            new BlueprintTarget(typeof(TitansFury)),
            new BlueprintTarget(typeof(TomahawkOfTecumseh)),
            new BlueprintTarget(typeof(TouchOfAnguish)),
            new BlueprintTarget(typeof(TriLithiumBlade)),
            new BlueprintTarget(typeof(TwoShotCrossbow)),
            new BlueprintTarget(typeof(UltimaGlaive)),
            new BlueprintTarget(typeof(UmbraWarAxe)),
            new BlueprintTarget(typeof(UndeadCrown)),
            new BlueprintTarget(typeof(ValiantThrower)),
            new BlueprintTarget(typeof(VampireKiller)),
            new BlueprintTarget(typeof(VATSEnhancedDagger)),
            new BlueprintTarget(typeof(VenomsSting)),
            new BlueprintTarget(typeof(VoidsEmbrace)),
            new BlueprintTarget(typeof(VolendrungWarHammer)),
            new BlueprintTarget(typeof(VolendrungWorHammer)),
            new BlueprintTarget(typeof(VoltaxicRiftLance)),
            new BlueprintTarget(typeof(VoyageursPaddle)),
            new BlueprintTarget(typeof(VulcansForgeHammer)),
            new BlueprintTarget(typeof(WabbajackClub)),
            new BlueprintTarget(typeof(WandOfWoh)),
            new BlueprintTarget(typeof(Whelm)),
            new BlueprintTarget(typeof(WhisperingWindWarMace)),
            new BlueprintTarget(typeof(WhisperwindBow)),
            new BlueprintTarget(typeof(WindDancersDagger)),
            new BlueprintTarget(typeof(WindripperBow)),
            new BlueprintTarget(typeof(Wizardspike)),
            new BlueprintTarget(typeof(WondershotCrossbow)),
            new BlueprintTarget(typeof(Xcalibur)),
            new BlueprintTarget(typeof(YumiOfEmpressJingu)),
            new BlueprintTarget(typeof(ZhugeFeathersFan)),
            new BlueprintTarget(typeof(Zulfiqar)),
            new BlueprintTarget(typeof(AbbasidsTreasureChest)),
            new BlueprintTarget(typeof(AbyssalPlaneChest)),
            new BlueprintTarget(typeof(AlehouseChest)),
            new BlueprintTarget(typeof(AlienArtifactChest)),
            new BlueprintTarget(typeof(AlienArtifaxChest)),
            new BlueprintTarget(typeof(AlliedForcesTreasureChest)),
            new BlueprintTarget(typeof(AnarchistsCache)),
            new BlueprintTarget(typeof(AncientRelicChest)),
            new BlueprintTarget(typeof(AngelBlessingChest)),
            new BlueprintTarget(typeof(AnglersBounty)),
            new BlueprintTarget(typeof(ArcadeKingsTreasure)),
            new BlueprintTarget(typeof(ArcadeMastersVault)),
            new BlueprintTarget(typeof(ArcaneTreasureChest)),
            new BlueprintTarget(typeof(ArcanumChest)),
            new BlueprintTarget(typeof(ArcheryBonusChest)),
            new BlueprintTarget(typeof(AshokasTreasureChest)),
            new BlueprintTarget(typeof(AshokaTreasureChest)),
            new BlueprintTarget(typeof(AssassinsCoffer)),
            new BlueprintTarget(typeof(AthenianTreasureChest)),
            new BlueprintTarget(typeof(BabylonianChest)),
            new BlueprintTarget(typeof(BakersDelightChest)),
            new BlueprintTarget(typeof(BakersDolightChest)),
            new BlueprintTarget(typeof(BavarianFestChest)),
            new BlueprintTarget(typeof(BismarcksTreasureChest)),
            new BlueprintTarget(typeof(BolsheviksLoot)),
            new BlueprintTarget(typeof(BountyHuntersCache)),
            new BlueprintTarget(typeof(BoyBandBox)),
            new BlueprintTarget(typeof(BrewmastersChest)),
            new BlueprintTarget(typeof(BritainsRoyalTreasuryChest)),
            new BlueprintTarget(typeof(BuccaneersChest)),
            new BlueprintTarget(typeof(CaesarChest)),
            new BlueprintTarget(typeof(CandyCarnivalCoffer)),
            new BlueprintTarget(typeof(CaptainCooksTreasure)),
            new BlueprintTarget(typeof(CelticLegendsChest)),
            new BlueprintTarget(typeof(ChamplainTreasureChest)),
            new BlueprintTarget(typeof(CheeseConnoisseursCache)),
            new BlueprintTarget(typeof(ChocolatierTreasureChest)),
            new BlueprintTarget(typeof(CivilRightsStrongbox)),
            new BlueprintTarget(typeof(CivilWarCache)),
            new BlueprintTarget(typeof(CivilWarChest)),
            new BlueprintTarget(typeof(CivilWorChest)),
            new BlueprintTarget(typeof(ClownsWhimsicalChest)),
            new BlueprintTarget(typeof(ColonialPioneersCache)),
            new BlueprintTarget(typeof(ComradesCache)),
            new BlueprintTarget(typeof(ConfederationCache)),
            new BlueprintTarget(typeof(ConquistadorsHoard)),
            new BlueprintTarget(typeof(CovenTreasuresChest)),
            new BlueprintTarget(typeof(CyberneticCache)),
            new BlueprintTarget(typeof(CyrusTreasure)),
            new BlueprintTarget(typeof(DesertPharaohChest)),
            new BlueprintTarget(typeof(DinerDelightChest)),
            new BlueprintTarget(typeof(DoctorsBag)),
            new BlueprintTarget(typeof(DojoLegacyChest)),
            new BlueprintTarget(typeof(DragonGuardiansHoardChest)),
            new BlueprintTarget(typeof(DragonHoardChest)),
            new BlueprintTarget(typeof(DragonHoChest)),
            new BlueprintTarget(typeof(DragonHodChest)),
            new BlueprintTarget(typeof(DragonHorChest)),
            new BlueprintTarget(typeof(DriveInTreasureTrove)),
            new BlueprintTarget(typeof(DroidWorkshopChest)),
            new BlueprintTarget(typeof(DynastyRelicsChest)),
            new BlueprintTarget(typeof(EdisonsTreasureChest)),
            new BlueprintTarget(typeof(EgyptianChest)),
            new BlueprintTarget(typeof(EliteFoursVault)),
            new BlueprintTarget(typeof(ElvenEnchantressChest)),
            new BlueprintTarget(typeof(ElvenTreasuryChest)),
            new BlueprintTarget(typeof(EmeraldIsleChest)),
            new BlueprintTarget(typeof(EmperorJustinianCache)),
            new BlueprintTarget(typeof(EmperorLegacyChest)),
            new BlueprintTarget(typeof(EnchantedForestChest)),
            new BlueprintTarget(typeof(EtherealPlaneChest)),
            new BlueprintTarget(typeof(EuropeanRelicsChest)),
            new BlueprintTarget(typeof(FairyDustChest)),
            new BlueprintTarget(typeof(FirstNationsHeritageChest)),
            new BlueprintTarget(typeof(FlowerPowerChest)),
            new BlueprintTarget(typeof(FocusBonusChest)),
            new BlueprintTarget(typeof(ForbiddenAlchemistsCache)),
            new BlueprintTarget(typeof(FrontierExplorersStash)),
            new BlueprintTarget(typeof(FunkyFashionChest)),
            new BlueprintTarget(typeof(FurTradersChest)),
            new BlueprintTarget(typeof(GalacticExplorersTrove)),
            new BlueprintTarget(typeof(GalacticRelicsChest)),
            new BlueprintTarget(typeof(GamersLootbox)),
            new BlueprintTarget(typeof(GardenersParadiseChest)),
            new BlueprintTarget(typeof(GeishasGift)),
            new BlueprintTarget(typeof(GermanUnificationChest)),
            new BlueprintTarget(typeof(GoldRushBountyChest)),
            new BlueprintTarget(typeof(GoldRushRelicChest)),
            new BlueprintTarget(typeof(GreasersGoldmineChest)),
            new BlueprintTarget(typeof(GroovyVabesChest)),
            new BlueprintTarget(typeof(GroovyVibesChest)),
            new BlueprintTarget(typeof(GrungeRockersCache)),
            new BlueprintTarget(typeof(HipHopRapVault)),
            new BlueprintTarget(typeof(HolyRomanEmpireChest)),
            new BlueprintTarget(typeof(HomewardBoundChest)),
            new BlueprintTarget(typeof(HussarsChest)),
            new BlueprintTarget(typeof(InfernalPlaneChest)),
            new BlueprintTarget(typeof(InnovatorVault)),
            new BlueprintTarget(typeof(JedisReliquary)),
            new BlueprintTarget(typeof(JestersGigglingChest)),
            new BlueprintTarget(typeof(JestersJamboreeChest)),
            new BlueprintTarget(typeof(JestersJest)),
            new BlueprintTarget(typeof(JudahsTreasureChest)),
            new BlueprintTarget(typeof(JukeboxJewels)),
            new BlueprintTarget(typeof(JustinianTreasureChest)),
            new BlueprintTarget(typeof(KagesTreasureChest)),
            new BlueprintTarget(typeof(KingdomsVaultChest)),
            new BlueprintTarget(typeof(KingKamehamehaTreasure)),
            new BlueprintTarget(typeof(KingsBest)),
            new BlueprintTarget(typeof(KoscheisUndyingChest)),
            new BlueprintTarget(typeof(LawyerBriefcase)),
            new BlueprintTarget(typeof(LeprechaunsLootChest)),
            new BlueprintTarget(typeof(LeprechaunsTrove)),
            new BlueprintTarget(typeof(LouisTreasuryChest)),
            new BlueprintTarget(typeof(MacingBonusChest)),
            new BlueprintTarget(typeof(MagesArcaneChest)),
            new BlueprintTarget(typeof(MagesRelicChest)),
            new BlueprintTarget(typeof(MaharajaTreasureChest)),
            new BlueprintTarget(typeof(MarioTreasureBox)),
            new BlueprintTarget(typeof(MedievalEnglandChest)),
            new BlueprintTarget(typeof(MerchantChest)),
            new BlueprintTarget(typeof(MerchantFortuneChest)),
            new BlueprintTarget(typeof(MermaidTreasureChest)),
            new BlueprintTarget(typeof(MillenniumTimeCapsule)),
            new BlueprintTarget(typeof(MimeSilentChest)),
            new BlueprintTarget(typeof(MirageChest)),
            new BlueprintTarget(typeof(ModMadnessTrunk)),
            new BlueprintTarget(typeof(MondainsDarkSecretsChest)),
            new BlueprintTarget(typeof(MysticalDaoChest)),
            new BlueprintTarget(typeof(MysticalEnchantersChest)),
            new BlueprintTarget(typeof(MysticEnigmaChest)),
            new BlueprintTarget(typeof(MysticGardenCache)),
            new BlueprintTarget(typeof(MysticMoonChest)),
            new BlueprintTarget(typeof(NaturesBountyChest)),
            new BlueprintTarget(typeof(NavyCaptainsChest)),
            new BlueprintTarget(typeof(NecroAlchemicalChest)),
            new BlueprintTarget(typeof(NeonNightsChest)),
            new BlueprintTarget(typeof(NeroChest)),
            new BlueprintTarget(typeof(NinjaChest)),
            new BlueprintTarget(typeof(NordicExplorersChest)),
            new BlueprintTarget(typeof(PatriotCache)),
            new BlueprintTarget(typeof(PeachRoyalCache)),
            new BlueprintTarget(typeof(PharaohsReliquary)),
            new BlueprintTarget(typeof(PharaohsTreasure)),
            new BlueprintTarget(typeof(PixieDustChest)),
            new BlueprintTarget(typeof(PokeballTreasureChest)),
            new BlueprintTarget(typeof(PolishRoyalChest)),
            new BlueprintTarget(typeof(PopStarsTrove)),
            new BlueprintTarget(typeof(RadBoomboxTrove)),
            new BlueprintTarget(typeof(Radical90sRelicsChest)),
            new BlueprintTarget(typeof(RadRidersStash)),
            new BlueprintTarget(typeof(RailwayWorkersChest)),
            new BlueprintTarget(typeof(RebelChest)),
            new BlueprintTarget(typeof(RenaissanceCollectorsChest)),
            new BlueprintTarget(typeof(RetroArcadeChest)),
            new BlueprintTarget(typeof(RevolutionaryChess)),
            new BlueprintTarget(typeof(RevolutionaryChest)),
            new BlueprintTarget(typeof(RevolutionaryRelicChest)),
            new BlueprintTarget(typeof(RevolutionChest)),
            new BlueprintTarget(typeof(RhineValleyChest)),
            new BlueprintTarget(typeof(RiverPiratesChest)),
            new BlueprintTarget(typeof(RiverRaftersChest)),
            new BlueprintTarget(typeof(RockersVault)),
            new BlueprintTarget(typeof(RockNBallVault)),
            new BlueprintTarget(typeof(RockNRallVault)),
            new BlueprintTarget(typeof(RockNRollVault)),
            new BlueprintTarget(typeof(RoguesHiddenChest)),
            new BlueprintTarget(typeof(RomanBritanniaChest)),
            new BlueprintTarget(typeof(RomanEmperorsVault)),
            new BlueprintTarget(typeof(SamuraiHonorChest)),
            new BlueprintTarget(typeof(SamuraiStash)),
            new BlueprintTarget(typeof(SandstormChest)),
            new BlueprintTarget(typeof(ScholarEnlightenmentChest)),
            new BlueprintTarget(typeof(SeaDogsChest)),
            new BlueprintTarget(typeof(ShinobiSecretsChest)),
            new BlueprintTarget(typeof(SilkRoadTreasuresChest)),
            new BlueprintTarget(typeof(SilverScreenChest)),
            new BlueprintTarget(typeof(SithsVault)),
            new BlueprintTarget(typeof(SlavicBrosChest)),
            new BlueprintTarget(typeof(SlavicLegendsChest)),
            new BlueprintTarget(typeof(SmugglersCache)),
            new BlueprintTarget(typeof(SocialMediaMavensChest)),
            new BlueprintTarget(typeof(SorceressSecretsChest)),
            new BlueprintTarget(typeof(SpaceRaceCache)),
            new BlueprintTarget(typeof(SpartanTreasureChest)),
            new BlueprintTarget(typeof(SpecialChivalryChest)),
            new BlueprintTarget(typeof(SpecialWoodenChestConstantine)),
            new BlueprintTarget(typeof(SpecialWoodenChestExplorerLegacy)),
            new BlueprintTarget(typeof(SpecialWoodenChestFrench)),
            new BlueprintTarget(typeof(SpecialWoodenChestHelios)),
            new BlueprintTarget(typeof(SpecialWoodenChestIvan)),
            new BlueprintTarget(typeof(SpecialWoodenChestOisin)),
            new BlueprintTarget(typeof(SpecialWoodenChestTomoe)),
            new BlueprintTarget(typeof(SpecialWoodenChestWashington)),
            new BlueprintTarget(typeof(StarfleetsVault)),
            new BlueprintTarget(typeof(SugarplumFairyChest)),
            new BlueprintTarget(typeof(SwingTimeChest)),
            new BlueprintTarget(typeof(SwordsmanshipBonusChest)),
            new BlueprintTarget(typeof(TacticsBonusChest)),
            new BlueprintTarget(typeof(TangDynastyChest)),
            new BlueprintTarget(typeof(TechnicolorTalesChest)),
            new BlueprintTarget(typeof(TechnophilesCache)),
            new BlueprintTarget(typeof(TeutonicRelicChest)),
            new BlueprintTarget(typeof(TeutonicTreasuresChest)),
            new BlueprintTarget(typeof(ThiefsHideawayStash)),
            new BlueprintTarget(typeof(ToxicologistsTrove)),
            new BlueprintTarget(typeof(TrailblazersTrove)),
            new BlueprintTarget(typeof(TravelerChest)),
            new BlueprintTarget(typeof(TreasureChestOfTheQinDynasty)),
            new BlueprintTarget(typeof(TreasureChestOfTheThreeKingdoms)),
            new BlueprintTarget(typeof(TsarsLegacyChest)),
            new BlueprintTarget(typeof(TsarsRoyalChest)),
            new BlueprintTarget(typeof(TsarsTreasureChest)),
            new BlueprintTarget(typeof(TudorDynastyChest)),
            new BlueprintTarget(typeof(UndergroundAnarchistsCache)),
            new BlueprintTarget(typeof(USSRRelicsChest)),
            new BlueprintTarget(typeof(VenetianMerchantsStash)),
            new BlueprintTarget(typeof(VHSAdventureCache)),
            new BlueprintTarget(typeof(VictorianEraChest)),
            new BlueprintTarget(typeof(VikingChest)),
            new BlueprintTarget(typeof(VintnersVault)),
            new BlueprintTarget(typeof(VinylVault)),
            new BlueprintTarget(typeof(VirtuesGuardianChest)),
            new BlueprintTarget(typeof(WarOf1812Vault)),
            new BlueprintTarget(typeof(WarringStatesChest)),
            new BlueprintTarget(typeof(WingedHusChest)),
            new BlueprintTarget(typeof(WingedHussarsChest)),
            new BlueprintTarget(typeof(WitchsBrewChest)),
            new BlueprintTarget(typeof(WorkersRevolutionChest)),
            new BlueprintTarget(typeof(WorldWarIIChest)),
            new BlueprintTarget(typeof(WWIIValorChest)),
            new BlueprintTarget(typeof(MahJongTile)),
            new BlueprintTarget(typeof(AlchemyTalisman)),
            new BlueprintTarget(typeof(CartographyTable)),
            new BlueprintTarget(typeof(StrappedBooks)),
            new BlueprintTarget(typeof(CarpentryTalisman)),
            new BlueprintTarget(typeof(CharcuterieBoard)),
            new BlueprintTarget(typeof(BottledPlague)),
            new BlueprintTarget(typeof(NixieStatue)),
            new BlueprintTarget(typeof(GrandmasSpecialRolls)),
            new BlueprintTarget(typeof(ExoticFish)),
            new BlueprintTarget(typeof(HildebrandtShield)),
            new BlueprintTarget(typeof(GarbageBag)),
            new BlueprintTarget(typeof(GlassOfBubbly)),
            new BlueprintTarget(typeof(FishBasket)),
            new BlueprintTarget(typeof(FineSilverWire)),
            new BlueprintTarget(typeof(PlatinumChip)),
            new BlueprintTarget(typeof(TribalHelm)),
            new BlueprintTarget(typeof(GlassTable)),
            new BlueprintTarget(typeof(WaterWell)),
            new BlueprintTarget(typeof(RibbonAward)),
            new BlueprintTarget(typeof(RookStone)),
            new BlueprintTarget(typeof(AlchemistBookcase)),
            new BlueprintTarget(typeof(ElementRegular)),
            new BlueprintTarget(typeof(Satchel)),
            new BlueprintTarget(typeof(LayingChicken)),
            new BlueprintTarget(typeof(EssenceOfToad)),
            new BlueprintTarget(typeof(SalvageMachine)),
            new BlueprintTarget(typeof(TwentyfiveShield)),
            new BlueprintTarget(typeof(DaggerSign)),
            new BlueprintTarget(typeof(MultiPump)),
            new BlueprintTarget(typeof(HeartPillow)),
            new BlueprintTarget(typeof(HydroxFluid)),
            new BlueprintTarget(typeof(MasterCello)),
            new BlueprintTarget(typeof(DressForm)),
            new BlueprintTarget(typeof(LargeWeatheredBook)),
            new BlueprintTarget(typeof(WeddingCandelabra)),
            new BlueprintTarget(typeof(DeckOfMagicCards)),
            new BlueprintTarget(typeof(BrokenBottle)),
            new BlueprintTarget(typeof(FancyHornOfPlenty)),
            new BlueprintTarget(typeof(FineGoldWire)),
            new BlueprintTarget(typeof(WaterRelic)),
            new BlueprintTarget(typeof(EnchantedAnnealer)),
            new BlueprintTarget(typeof(LampPostC)),
            new BlueprintTarget(typeof(BlueSand)),
            new BlueprintTarget(typeof(FunMushroom)),
            new BlueprintTarget(typeof(ReactiveHormones)),
            new BlueprintTarget(typeof(CandleStick)),
            new BlueprintTarget(typeof(LuckyDice)),
            new BlueprintTarget(typeof(JudasCradle)),
            new BlueprintTarget(typeof(GlassFurnace)),
            new BlueprintTarget(typeof(LovelyLilies)),
            new BlueprintTarget(typeof(CupOfSlime)),
            new BlueprintTarget(typeof(GingerbreadCookie)),
            new BlueprintTarget(typeof(CarvingMachine)),
            new BlueprintTarget(typeof(GargoyleLamp)),
            new BlueprintTarget(typeof(AnimalTopiary)),
            new BlueprintTarget(typeof(TinCowbell)),
            new BlueprintTarget(typeof(WoodAlchohol)),
            new BlueprintTarget(typeof(ChocolateFountain)),
            new BlueprintTarget(typeof(PowerGem)),
            new BlueprintTarget(typeof(AtomicRegulator)),
            new BlueprintTarget(typeof(JesterSkull)),
            new BlueprintTarget(typeof(GamerGirlFeet)),
            new BlueprintTarget(typeof(HildebrandtTapestry)),
            new BlueprintTarget(typeof(AnimalBox)),
            new BlueprintTarget(typeof(BakingBoard)),
            new BlueprintTarget(typeof(SatanicTable)),
            new BlueprintTarget(typeof(WaterFountain)),
            new BlueprintTarget(typeof(FountainWall)),
            new BlueprintTarget(typeof(HildebrandtFlag)),
            new BlueprintTarget(typeof(MysteryOrb)),
            new BlueprintTarget(typeof(BlueberryPie)),
            new BlueprintTarget(typeof(BioSamples)),
            new BlueprintTarget(typeof(OldEmbroideryTool)),
            new BlueprintTarget(typeof(DistillationFlask)),
            new BlueprintTarget(typeof(SexWhip)),
            new BlueprintTarget(typeof(FrostToken)),
            new BlueprintTarget(typeof(SoftTowel)),
            new BlueprintTarget(typeof(WeddingDayCake)),
            new BlueprintTarget(typeof(LargeTome)),
            new BlueprintTarget(typeof(GargishTotem)),
            new BlueprintTarget(typeof(InscriptionTalisman)),
            new BlueprintTarget(typeof(HeavyAnchor)),
            new BlueprintTarget(typeof(PunishmentStocks)),
            new BlueprintTarget(typeof(StarMap)),
            new BlueprintTarget(typeof(SkullRing)),
            new BlueprintTarget(typeof(BrandingIron)),
            new BlueprintTarget(typeof(OldBones)),
            new BlueprintTarget(typeof(MillStones)),
            new BlueprintTarget(typeof(Steroids)),
            new BlueprintTarget(typeof(HildebrandtBunting)),
            new BlueprintTarget(typeof(LexxVase)),
            new BlueprintTarget(typeof(OrnateHarp)),
            new BlueprintTarget(typeof(FletchingTalisman)),
            new BlueprintTarget(typeof(TinTub)),
            new BlueprintTarget(typeof(FishingBear)),
            new BlueprintTarget(typeof(WorldShard)),
            new BlueprintTarget(typeof(SheepCarcass)),
            new BlueprintTarget(typeof(TailoringTalisman)),
            new BlueprintTarget(typeof(DecorativeOrchid)),
            new BlueprintTarget(typeof(SubOil)),
            new BlueprintTarget(typeof(FancyPainting)),
            new BlueprintTarget(typeof(MedusaHead)),
            new BlueprintTarget(typeof(PetRock)),
            new BlueprintTarget(typeof(MeatHooks)),
            new BlueprintTarget(typeof(GamerJelly)),
            new BlueprintTarget(typeof(ShardCrest)),
            new BlueprintTarget(typeof(EvilCandle)),
            new BlueprintTarget(typeof(HotFlamingScarecrow)),
            new BlueprintTarget(typeof(AmatureTelescope)),
            new BlueprintTarget(typeof(AnniversaryPainting)),
            new BlueprintTarget(typeof(MagicBookStand)),
            new BlueprintTarget(typeof(SmugglersCrate)),
            new BlueprintTarget(typeof(HolidayPillow)),
            new BlueprintTarget(typeof(UncrackedGeode)),
            new BlueprintTarget(typeof(DrapedBlanket)),
            new BlueprintTarget(typeof(BlacksmithTalisman)),
            new BlueprintTarget(typeof(CityBanner)),
            new BlueprintTarget(typeof(BookTwentyfive)),
            new BlueprintTarget(typeof(WelcomeMat)),
            new BlueprintTarget(typeof(HolidayCandleArran)),
            new BlueprintTarget(typeof(ValentineTeddybear)),
            new BlueprintTarget(typeof(WitchesCauldron)),
            new BlueprintTarget(typeof(FireRelic)),
            new BlueprintTarget(typeof(CartographyDesk)),
            new BlueprintTarget(typeof(BirdStatue)),
            new BlueprintTarget(typeof(Hamburgers)),
            new BlueprintTarget(typeof(SerpantCrest)),
            new BlueprintTarget(typeof(AstroLabe)),
            new BlueprintTarget(typeof(OrganicHeart)),
            new BlueprintTarget(typeof(Birdhouse)),
            new BlueprintTarget(typeof(SabertoothSkull)),
            new BlueprintTarget(typeof(ZebulinVase)),
            new BlueprintTarget(typeof(PineResin)),
            new BlueprintTarget(typeof(SpiderTree)),
            new BlueprintTarget(typeof(RopeSpindle)),
            new BlueprintTarget(typeof(DailyNewspaper)),
            new BlueprintTarget(typeof(FunPumpkinCannon)),
            new BlueprintTarget(typeof(VirtueRune)),
            new BlueprintTarget(typeof(BonFire)),
            new BlueprintTarget(typeof(MiniCherryTree)),
            new BlueprintTarget(typeof(SkullShield)),
            new BlueprintTarget(typeof(UnluckyDice)),
            new BlueprintTarget(typeof(ImportantBooks)),
            new BlueprintTarget(typeof(RareMinerals)),
            new BlueprintTarget(typeof(QuestWineRack)),
            new BlueprintTarget(typeof(FancyCrystalSkull)),
            new BlueprintTarget(typeof(StoneHead)),
            new BlueprintTarget(typeof(FluxCompound)),
            new BlueprintTarget(typeof(ArtisanHolidayTree)),
            new BlueprintTarget(typeof(TinyWizard)),
            new BlueprintTarget(typeof(MiniKeg)),
            new BlueprintTarget(typeof(DemonPlatter)),
            new BlueprintTarget(typeof(Hotdogs)),
            new BlueprintTarget(typeof(PersonalMortor)),
            new BlueprintTarget(typeof(RareWire)),
            new BlueprintTarget(typeof(ForbiddenTome)),
            new BlueprintTarget(typeof(CompoundF)),
            new BlueprintTarget(typeof(MonsterBones)),
            new BlueprintTarget(typeof(MagicOrb)),
            new BlueprintTarget(typeof(RibEye)),
            new BlueprintTarget(typeof(ButterChurn)),
            new BlueprintTarget(typeof(StainedWindow)),
            new BlueprintTarget(typeof(MutantStarfish)),
            new BlueprintTarget(typeof(WatermelonSliced)),
            new BlueprintTarget(typeof(ImperiumCrest)),
            new BlueprintTarget(typeof(ExoticWoods)),
            new BlueprintTarget(typeof(ZombieHand)),
            new BlueprintTarget(typeof(EasterDayEgg)),
            new BlueprintTarget(typeof(FancyXmasTree)),
            new BlueprintTarget(typeof(CrabBushel)),
            new BlueprintTarget(typeof(PersonalCannon)),
            new BlueprintTarget(typeof(GalvanizedTub)),
            new BlueprintTarget(typeof(FixedScales)),
            new BlueprintTarget(typeof(NexusShard)),
            new BlueprintTarget(typeof(RareSausage)),
            new BlueprintTarget(typeof(WatermelonFruit)),
            new BlueprintTarget(typeof(ToolBox)),
            new BlueprintTarget(typeof(HorrodrickCube)),
            new BlueprintTarget(typeof(TrophieAward)),
            new BlueprintTarget(typeof(ClutteredDesk)),
            new BlueprintTarget(typeof(TinkeringTalisman)),
            new BlueprintTarget(typeof(DeathBlowItem)),
            new BlueprintTarget(typeof(DeadBody)),
            new BlueprintTarget(typeof(FairyOil)),
            new BlueprintTarget(typeof(FleshLight)),
            new BlueprintTarget(typeof(EssentialBooks)),
            new BlueprintTarget(typeof(PileOfChains)),
            new BlueprintTarget(typeof(FancyCopperSunflower)),
            new BlueprintTarget(typeof(FineHoochJug)),
            new BlueprintTarget(typeof(SpookyGhost)),
            new BlueprintTarget(typeof(ScentedCandle)),
            new BlueprintTarget(typeof(SnowSculpture)),
            new BlueprintTarget(typeof(MasterShrubbery)),
            new BlueprintTarget(typeof(MilkingPail)),
            new BlueprintTarget(typeof(MonsterTrophy)),
            new BlueprintTarget(typeof(DistilledEssence)),
            new BlueprintTarget(typeof(WigStand)),
            new BlueprintTarget(typeof(BrassFountain)),
            new BlueprintTarget(typeof(HandOfFate)),
            new BlueprintTarget(typeof(NameTapestry)),
            new BlueprintTarget(typeof(OpalBranch)),
            new BlueprintTarget(typeof(SilverMirror)),
            new BlueprintTarget(typeof(MarbleHourglass)),
            new BlueprintTarget(typeof(KnightStone)),
            new BlueprintTarget(typeof(MaxxiaDust)),
            new BlueprintTarget(typeof(TrexSkull)),
            new BlueprintTarget(typeof(RootThrone)),
            new BlueprintTarget(typeof(BabyLavos)),
            new BlueprintTarget(typeof(CowToken)),
            new BlueprintTarget(typeof(WallFlowers)),
            new BlueprintTarget(typeof(ColoredLamppost)),
            new BlueprintTarget(typeof(EarthRelic)),
            new BlueprintTarget(typeof(ExoticWhistle)),
            new BlueprintTarget(typeof(GrandmasKnitting)),
            new BlueprintTarget(typeof(FancyShipWheel)),
            new BlueprintTarget(typeof(ExoticBoots)),
            new BlueprintTarget(typeof(FineIronWire)),
            new BlueprintTarget(typeof(SeaSerpantSteak)),
            new BlueprintTarget(typeof(RareOil)),
            new BlueprintTarget(typeof(SpikedChair)),
            new BlueprintTarget(typeof(KrakenTrophy)),
            new BlueprintTarget(typeof(ZttyCrystal)),
            new BlueprintTarget(typeof(FineCopperWire)),
            new BlueprintTarget(typeof(GraniteHammer)),
            new BlueprintTarget(typeof(StuffedDoll)),
            new BlueprintTarget(typeof(FancyMirror)),
            new BlueprintTarget(typeof(ExoticPlum)),
            new BlueprintTarget(typeof(Shears)),
            new BlueprintTarget(typeof(FillerPowder)),
            new BlueprintTarget(typeof(HorrorPumpkin)),
            new BlueprintTarget(typeof(HumanCarvingKit)),
            new BlueprintTarget(typeof(HangingMask)),
            new BlueprintTarget(typeof(SkullIncense)),
            new BlueprintTarget(typeof(AncientRunes)),
            new BlueprintTarget(typeof(WeddingChest)),
            new BlueprintTarget(typeof(ExoticShipInABottle)),
            new BlueprintTarget(typeof(FancySewingMachine)),
            new BlueprintTarget(typeof(CowPoo)),
            new BlueprintTarget(typeof(FeedingTrough)),
            new BlueprintTarget(typeof(SkullBottle)),
            new BlueprintTarget(typeof(AncientDrum)),
            new BlueprintTarget(typeof(BrassBell)),
            new BlueprintTarget(typeof(PlagueBanner)),
            new BlueprintTarget(typeof(BeeHive)),
            new BlueprintTarget(typeof(FestiveChampagne)),
            new BlueprintTarget(typeof(DecorativeFishTank)),
            new BlueprintTarget(typeof(SkullsStack)),
            new BlueprintTarget(typeof(VenusFlytrap)),
            new BlueprintTarget(typeof(HorribleMask)),
            new BlueprintTarget(typeof(Meteorite)),
            new BlueprintTarget(typeof(TotumPole)),
            new BlueprintTarget(typeof(ExcitingTome)),
            new BlueprintTarget(typeof(WindRelic)),
            new BlueprintTarget(typeof(FancyCopperWings)),
            new BlueprintTarget(typeof(RareGrease)),
            new BlueprintTarget(typeof(EnchantedRose)),
            new BlueprintTarget(typeof(HeartChair)),
            new BlueprintTarget(typeof(PicnicDayBasket)),
            new BlueprintTarget(typeof(HorseToken)),
            new BlueprintTarget(typeof(AutoPounder)),
            new BlueprintTarget(typeof(WatermelonTray)),
            new BlueprintTarget(typeof(MasterTrumpet)),
            new BlueprintTarget(typeof(WeaponBottle)),
            new BlueprintTarget(typeof(LeatherStrapBelt)),
            new BlueprintTarget(typeof(JackPumpkin)),
            new BlueprintTarget(typeof(MiniYew)),
            new BlueprintTarget(typeof(ImportantFlag)),
            new BlueprintTarget(typeof(HutFlower)),
            new BlueprintTarget(typeof(CookingTalisman)),
            new BlueprintTarget(typeof(LampPostA)),
            new BlueprintTarget(typeof(LampPostB)),
            new BlueprintTarget(typeof(MasterGyro)),
            new BlueprintTarget(typeof(MemorialStone)),
            new BlueprintTarget(typeof(MemorialCopper)),
            new BlueprintTarget(typeof(LargeVat)),
            new BlueprintTarget(typeof(YardCupid)),
            new BlueprintTarget(typeof(FieldPlow)),
            new BlueprintTarget(typeof(ChaliceOfPilfering)),
            new BlueprintTarget(typeof(Jet)),
            new BlueprintTarget(typeof(InfinitySymbol)),
            new BlueprintTarget(typeof(AncientWood)),			
            new BlueprintTarget(typeof(StatueSouth)),			
            new BlueprintTarget(typeof(PowerScroll), SkillName.Swords, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Alchemy, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Anatomy, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalLore, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalTaming, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Archery, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ArmsLore, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Begging, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Blacksmith, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Bushido, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Camping, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Carpentry, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cartography, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Chivalry, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cooking, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.DetectHidden, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Discordance, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.EvalInt, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fencing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fishing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fletching, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Focus, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Forensics, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Healing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Herding, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Hiding, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Imbuing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Inscribe, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ItemID, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lockpicking, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lumberjacking, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Macing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.MagicResist, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Meditation, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mining, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Musicianship, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mysticism, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Necromancy, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Ninjitsu, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Parry, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Peacemaking, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Poisoning, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Provocation, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.RemoveTrap, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Snooping, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Spellweaving, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.SpiritSpeak, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealth, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Swords, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tactics, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tailoring, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.TasteID, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Throwing, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tinkering, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tracking, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Veterinary, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Wrestling, 120.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Alchemy, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Anatomy, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalLore, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalTaming, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Archery, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ArmsLore, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Begging, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Blacksmith, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Bushido, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Camping, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Carpentry, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cartography, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Chivalry, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cooking, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.DetectHidden, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Discordance, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.EvalInt, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fencing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fishing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fletching, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Focus, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Forensics, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Healing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Herding, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Hiding, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Imbuing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Inscribe, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ItemID, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lockpicking, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lumberjacking, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Macing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.MagicResist, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Meditation, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mining, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Musicianship, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mysticism, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Necromancy, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Ninjitsu, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Parry, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Peacemaking, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Poisoning, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Provocation, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.RemoveTrap, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Snooping, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Spellweaving, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.SpiritSpeak, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealth, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Swords, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tactics, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tailoring, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.TasteID, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Throwing, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tinkering, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tracking, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Veterinary, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Wrestling, 100.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Alchemy, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Anatomy, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalLore, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.AnimalTaming, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Archery, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ArmsLore, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Begging, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Blacksmith, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Bushido, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Camping, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Carpentry, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cartography, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Chivalry, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Cooking, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.DetectHidden, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Discordance, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.EvalInt, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fencing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fishing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Fletching, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Focus, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Forensics, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Healing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Herding, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Hiding, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Imbuing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Inscribe, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.ItemID, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lockpicking, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Lumberjacking, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Macing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.MagicResist, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Meditation, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mining, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Musicianship, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Mysticism, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Necromancy, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Ninjitsu, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Parry, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Peacemaking, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Poisoning, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Provocation, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.RemoveTrap, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Snooping, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Spellweaving, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.SpiritSpeak, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Stealth, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Swords, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tactics, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tailoring, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.TasteID, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Throwing, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tinkering, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Tracking, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Veterinary, 80.0),
            new BlueprintTarget(typeof(PowerScroll), SkillName.Wrestling, 80.0),			
			
        };

        private static readonly Type[] MaterialPool =
        {
            typeof(Board), 
			typeof(IronIngot), 
			typeof(BlankScroll),
            typeof(Leather),
			typeof(IronIngot),
			typeof(DullCopperIngot),
			typeof(ShadowIronIngot),
			typeof(CopperIngot),
			typeof(BronzeIngot),
			typeof(GoldIngot),
			typeof(AgapiteIngot),
			typeof(VeriteIngot),
			typeof(ValoriteIngot),
			typeof(RefreshPotion),
			typeof(AgilityPotion),
			typeof(NightSightPotion),
			typeof(LesserHealPotion),
			typeof(StrengthPotion),
			typeof(LesserPoisonPotion),
			typeof(LesserCurePotion),
			typeof(LesserExplosionPotion),
			typeof(MortarPestle),
			typeof(BlackPearl),
			typeof(Bloodmoss),
			typeof(Garlic),
			typeof(Ginseng),
			typeof(MandrakeRoot),
			typeof(Nightshade),
			typeof(SpidersSilk),
			typeof(SulfurousAsh),
			typeof(Bottle),
			typeof(Bacon),
			typeof(Ham),
			typeof(Sausage),
			typeof(RawChickenLeg),
			typeof(RawBird),
			typeof(RawLambLeg),
			typeof(RawRibs),
			typeof(Board),
			typeof(BreadLoaf),
			typeof(ApplePie),
			typeof(Cake),
			typeof(Muffins),
			typeof(CheeseWheel),
			typeof(CookedBird),
			typeof(LambLeg),
			typeof(ChickenLeg),
			typeof(SackFlour),
			typeof(JarHoney),
			typeof(Cabbage),
			typeof(Cantaloupe),
			typeof(Carrot),
			typeof(HoneydewMelon),
			typeof(Squash),
			typeof(Lettuce),
			typeof(Onion),
			typeof(Pumpkin),
			typeof(GreenGourd),
			typeof(YellowGourd),
			typeof(Turnip),
			typeof(Watermelon),
			typeof(EarOfCorn),
			typeof(Eggs),
			typeof(Peach),
			typeof(Pear),
			typeof(Lemon),
			typeof(Lime),
			typeof(Grapes),
			typeof(Apple),
			typeof(SheafOfHay),
			typeof(RawFishSteak),
			typeof(SmallFish),
			typeof(Fish),
			typeof(Hides),
			typeof(GoldRing),
			typeof(Necklace),
			typeof(GoldNecklace),
			typeof(GoldBeadNecklace),
			typeof(Beads),
			typeof(GoldBracelet),
			typeof(GoldEarrings),
			typeof(StarSapphire),
			typeof(Emerald),
			typeof(Sapphire),
			typeof(Ruby),
			typeof(Citrine),
			typeof(Amethyst),
			typeof(Tourmaline),
			typeof(Amber),
			typeof(Diamond),
			typeof(BatWing),
			typeof(DaemonBlood),
			typeof(PigIron),
			typeof(NoxCrystal),
			typeof(GraveDust),
			typeof(BoltOfCloth),
			typeof(Cloth),
			typeof(UncutCloth),
			typeof(Cotton),
			typeof(Wool),
			typeof(Flax),
			typeof(SpoolOfThread),
			typeof(OakLog),
			typeof(AshLog),
			typeof(YewLog),
			typeof(BloodwoodLog),
			typeof(ElixirOfRebirth),
			typeof(MedusaBlood),
			typeof(BarrabHemolymphConcentrate),
			typeof(PlantClippings),
			typeof(MyrmidexEggsac),
			typeof(InvisibilityPotion),
			typeof(JukariBurnPoiltice),
			typeof(LavaBerry),
			typeof(Vanilla),
			typeof(BlueDiamond),
			typeof(TigerPelt),
			typeof(PerfectBanana),
			typeof(YellowScales),
			typeof(RiverMoss),
			typeof(UraliTranceTonic),
			typeof(PoisonPotion),
			typeof(GreaterPoisonPotion),
			typeof(DeadlyPoisonPotion),
			typeof(ParasiticPotion),
			typeof(ParasiticPlant),
			typeof(DarkglowPotion),
			typeof(LuminescentFungi),
			typeof(ScouringToxin),
			typeof(ToxicVenomSac),
			typeof(ExplosionPotion),
			typeof(GreaterExplosionPotion),
			typeof(TacticalBomb),
			typeof(StrategicBomb),
			typeof(MegaBombPotion),
			typeof(MinorPoisonBomb),
			typeof(PoisonBomb),
			typeof(UltraPoisonBomb),
			typeof(MegaHealthBomb),
			typeof(ConflagrationPotion),
			typeof(GreaterConflagrationPotion),
			typeof(ConfusionBlastPotion),
			typeof(GreaterConfusionBlastPotion),
			typeof(BlackPowder),
			typeof(Saltpeter),
			typeof(Charcoal),
			typeof(Matchcord),
			typeof(Potash),
			typeof(SmokeBomb),
			typeof(HoveringWisp),
			typeof(NaturalDye),
			typeof(ColorFixative),
			typeof(NexusCore),
			typeof(DarkSapphire),
			typeof(CrushedGlass),
			typeof(CrystalGranules),
			typeof(CrystalDust),
			typeof(SoftenedReeds),
			typeof(VialOfVitriol),
			typeof(DryReeds),
			typeof(CrystallineFragments),
			typeof(ShimmeringCrystals),
			typeof(SilverSerpentVenom),
			typeof(BottleIchor),
			typeof(GoldDust),
			typeof(Boots),
			typeof(Sandals),
			typeof(Shoes),
			typeof(NinjaTabi),
			typeof(FurBoots),
			typeof(ThighBoots),
			typeof(ElvenBoots),
			typeof(SamuraiTabi),
			typeof(Waraji),
			typeof(JesterShoes),
			typeof(Robe),
			typeof(FancyDress),
			typeof(GildedDress),
			typeof(DeathRobe),
			typeof(MonkRobe),
			typeof(Kamishimo),
			typeof(HakamaShita),
			typeof(MaleKimono),
			typeof(FemaleKimono),
			typeof(MaleElvenRobe),
			typeof(FemaleElvenRobe),
			typeof(FloweredDress),
			typeof(EveningGown),
			typeof(PlainDress),
			typeof(HoodedShroudOfShadows),
			typeof(Epaulette),
			typeof(Cloak),
			typeof(Quiver),
			typeof(FeatheredHat),
			typeof(JesterHat),
			typeof(FloppyHat),
			typeof(Cap),
			typeof(WideBrimHat),
			typeof(StrawHat),
			typeof(TallStrawHat),
			typeof(WizardsHat),
			typeof(Bonnet),
			typeof(TricorneHat),
			typeof(Bandana),
			typeof(SkullCap),
			typeof(Kasa),
			typeof(ClothNinjaHood),
			typeof(FlowerGarland),
			typeof(BearMask),
			typeof(DeerMask),
			typeof(HornedTribalMask),
			typeof(TribalMask),
			typeof(OrcishKinMask),
			typeof(OrcMask),
			typeof(SavageMask),
			typeof(ChefsToque),
			typeof(Bascinet),
			typeof(CloseHelm),
			typeof(NorseHelm),
			typeof(OrcHelm),
			typeof(Helmet),
			typeof(AssassinsCowl),
			typeof(ChainHatsuburi),
			typeof(ChainCoif),
			typeof(Circlet),
			typeof(DecorativePlateKabuto),
			typeof(DragonTurtleHideHelm),
			typeof(EvilOrcHelm),
			typeof(LeatherCap),
			typeof(LeatherJingasa),
			typeof(LeatherMempo),
			typeof(LeatherNinjaHood),
			typeof(LightPlateJingasa),
			typeof(PlateBattleKabuto),
			typeof(PlateHelm),
			typeof(PlateMempo),
			typeof(RavenHelm),
			typeof(SmallPlateJingasa),
			typeof(StandardPlateKabuto),
			typeof(StuddedMempo),
			typeof(TigerPeltHelm),
			typeof(VultureHelm),
			typeof(PlateHatsuburi),
			typeof(BoneHelm),
			typeof(DragonHelm),
			typeof(HeavyPlateJingasa),
			typeof(WingedHelm),
			typeof(FancyShirt),
			typeof(Tunic),
			typeof(BodySash),
			typeof(Shirt),
			typeof(ElvenShirt),
			typeof(FormalShirt),
			typeof(ClothNinjaJacket),
			typeof(Doublet),
			typeof(Surcoat),
			typeof(JinBaori),
			typeof(JesterSuit),
			typeof(PlateChest),
			typeof(RingmailChest),
			typeof(ChainChest),
			typeof(LeatherChest),
			typeof(FemaleLeatherChest),
			typeof(FemalePlateChest),
			typeof(StuddedChest),
			typeof(BoneChest),
			typeof(DragonChest),
			typeof(DragonTurtleHideChest),
			typeof(FemaleLeafChest),
			typeof(FemaleStuddedChest),
			typeof(HideFemaleChest),
			typeof(LeafChest),
			typeof(LeatherNinjaJacket),
			typeof(TigerPeltChest),
			typeof(WoodlandChest),
			typeof(HideChest),
			typeof(LeatherDo),
			typeof(PlateDo),
			typeof(StuddedDo),
			typeof(DragonTurtleHideBustier),
			typeof(TigerPeltBustier),
			typeof(LongPants),
			typeof(ShortPants),
			typeof(LeatherShorts),
			typeof(ElvenPants),
			typeof(HidePants),
			typeof(LeatherNinjaPants),
			typeof(TattsukeHakama),
			typeof(PlateLegs),
			typeof(LeatherLegs),
			typeof(ChainLegs),
			typeof(StuddedLegs),
			typeof(DragonLegs),
			typeof(DragonTurtleHideLegs),
			typeof(LeafLegs),
			typeof(RingmailLegs),
			typeof(LeafTonlet),
			typeof(TigerPeltLegs),
			typeof(TigerPeltShorts),
			typeof(LeatherHaidate),
			typeof(PlateHaidate),
			typeof(LeatherSkirt),
			typeof(LeatherSuneate),
			typeof(StuddedHaidate),
			typeof(PlateSuneate),
			typeof(StuddedSuneate),
			typeof(WoodlandLegs),
			typeof(Skirt),
			typeof(Kilt),
			typeof(Hakama),
			typeof(FurSarong),
			typeof(TigerPeltLongSkirt),
			typeof(GuildedKilt),
			typeof(CheckeredKilt),
			typeof(FancyKilt),
			typeof(TigerPeltSkirt),
			typeof(PlateArms),
			typeof(StuddedBustierArms),
			typeof(RingmailArms),
			typeof(DragonArms),
			typeof(LeafArms),
			typeof(LeatherArms),
			typeof(StuddedArms),
			typeof(WoodlandArms),
			typeof(BoneArms),
			typeof(DragonTurtleHideArms),
			typeof(HidePauldrons),
			typeof(LeatherBustierArms),
			typeof(LeatherHiroSode),
			typeof(PlateHiroSode),
			typeof(StuddedHiroSode),
			typeof(LeatherGloves),
			typeof(PlateGloves),
			typeof(StuddedGloves),
			typeof(BoneGloves),
			typeof(WoodlandGloves),
			typeof(DragonGloves),
			typeof(RingmailGloves),
			typeof(HideGloves),
			typeof(LeafGloves),
			typeof(LeatherNinjaMitts),
			typeof(FullApron),
			typeof(Obi),
			typeof(WoodlandBelt),
			typeof(HalfApron),
			typeof(LeatherGorget),
			typeof(PlateGorget),
			typeof(StuddedGorget),
			typeof(ElegantCollar),
			typeof(HideGorget),
			typeof(TigerPeltCollar),
			typeof(WoodlandGorget),
			typeof(LeafGorget),
			typeof(RandomTalisman),
			typeof(Longsword),
			typeof(Broadsword),
			typeof(Cutlass),
			typeof(Katana),
			typeof(Scimitar),
			typeof(VikingSword),
			typeof(Axe),
			typeof(BattleAxe),
			typeof(DoubleAxe),
			typeof(ExecutionersAxe),
			typeof(LargeBattleAxe),
			typeof(TwoHandedAxe),
			typeof(WarAxe),
			typeof(Club),
			typeof(HammerPick),
			typeof(Mace),
			typeof(Maul),
			typeof(WarHammer),
			typeof(WarMace),
			typeof(Bardiche),
			typeof(Halberd),
			typeof(Lance),
			typeof(Pike),
			typeof(ShortSpear),
			typeof(Spear),
			typeof(WarFork),
			typeof(CompositeBow),
			typeof(Crossbow),
			typeof(HeavyCrossbow),
			typeof(RepeatingCrossbow),
			typeof(Bow),
			typeof(Dagger),
			typeof(Kryss),
			typeof(SkinningKnife),
			typeof(Pitchfork),
			typeof(BlackStaff),
			typeof(GnarledStaff),
			typeof(QuarterStaff),
			typeof(ShepherdsCrook),
			typeof(BladedStaff),
			typeof(Scythe),
			typeof(Scepter),
			typeof(MagicWand),
			typeof(AnimalClaws),
			typeof(WrestlingBelt),
			typeof(ArtificerWand),
			typeof(BashingShield),
			typeof(BeggersStick),
			typeof(BoltRod),
			typeof(CampingLanturn),
			typeof(CarpentersHammer),
			typeof(CooksCleaver),
			typeof(DetectivesBoneHarvester),
			typeof(DistractingHammer),
			typeof(ExplorersMachete),
			typeof(FireAlchemyBlaster),
			typeof(FishermansTrident),
			typeof(FletchersBow),
			typeof(FocusKryss),
			typeof(GearLauncher),
			typeof(GourmandsFork),
			typeof(HolyKnightSword),
			typeof(IllegalCrossbow),
			typeof(IntelligenceEvaluator),
			typeof(LoreSword),
			typeof(MageWand),
			typeof(MallKatana),
			typeof(MeatPicks),
			typeof(MeditationFans),
			typeof(MerchantsShotgun),
			typeof(MysticStaff),
			typeof(NecromancersStaff),
			typeof(NinjaBow),
			typeof(Nunchucks),
			typeof(PoisonBlade),
			typeof(RangersCrossbow),
			typeof(ResonantHarp),
			typeof(RevealingAxe),
			typeof(Scalpel),
			typeof(ScribeSword),
			typeof(SewingNeedle),
			typeof(ShadowSai),
			typeof(SilentBlade),
			typeof(SleepAid),
			typeof(SmithSmasher),
			typeof(SnoopersPaddle),
			typeof(SpellWeaversWand),
			typeof(SpiritScepter),
			typeof(TacticalMultitool),
			typeof(TenFootPole),
			typeof(VeterinaryLance),
			typeof(VivisectionKnife),
			typeof(WitchBurningTorch),
			typeof(AssassinSpike),
			typeof(Bokuto),
			typeof(BoneHarvester),
			typeof(BoneMachete),
			typeof(Boomerang),
			typeof(ButcherKnife),
			typeof(Cleaver),
			typeof(CrescentBlade),
			typeof(Cyclone),
			typeof(Daisho),
			typeof(DiamondMace),
			typeof(DiscMace),
			typeof(DoubleBladedStaff),
			typeof(ElvenCompositeLongbow),
			typeof(ElvenMachete),
			typeof(ElvenSpellblade),
			typeof(JukaBow),
			typeof(Kama),
			typeof(Lajatang),
			typeof(Leafblade),
			typeof(MagicalShortbow),
			typeof(NoDachi),
			typeof(Nunchaku),
			typeof(Pickaxe),
			typeof(Tekagi),
			typeof(Tessen),
			typeof(Tetsubo),
			typeof(Wakizashi),
			typeof(WildStaff),
			typeof(Yumi),
			typeof(Shield),
			typeof(Lantern),
			typeof(BronzeShield),
			typeof(Buckler),
			typeof(HeaterShield),
			typeof(MetalKiteShield),
			typeof(MetalShield),
			typeof(OrderShield),
			typeof(ChaosShield),
			typeof(WoodenKiteShield),
			typeof(WoodenShield),
			typeof(Torch),
			typeof(FootStool),
			typeof(BarrelStaves),
			typeof(BarrelLid),
			typeof(Stool),
			typeof(WoodenBox),
			typeof(SmallCrate),
			typeof(MediumCrate),
			typeof(LargeCrate),
			typeof(WoodenChest),
			typeof(EmptyBookcase),
			typeof(WoodenBench),
			typeof(WoodenThrone),
			typeof(TallCabinet),
			typeof(ShortCabinet),
			typeof(RedArmoire),
			typeof(ElegantArmoire),
			typeof(MapleArmoire),
			typeof(CherryArmoire),
			typeof(LapHarp),
			typeof(Lute),
			typeof(Drums),
			typeof(Harp),
			typeof(PlainWoodenChest),
			typeof(OrnateWoodenChest),
			typeof(GildedWoodenChest),
			typeof(WoodenFootLocker),
			typeof(FinishedWoodenChest),
			typeof(SweetCocoaButter),
			typeof(Dough),
			typeof(UnbakedFruitPie),
			typeof(UnbakedPeachCobbler),
			typeof(UnbakedApplePie),
			typeof(UnbakedPumpkinPie),
			typeof(Cookies),
			typeof(ThreeTieredCake),
			typeof(MisoSoup),
			typeof(WhiteMisoSoup),
			typeof(RedMisoSoup),
			typeof(AwaseMisoSoup),
			typeof(WasabiClumps),
			typeof(SushiRolls),
			typeof(SushiPlatter),
			typeof(GreenTea),
			typeof(SweetDough),
			typeof(CakeMix),
			typeof(CookieMix),
			typeof(UnbakedQuiche),
			typeof(UnbakedMeatPie),
			typeof(UncookedSausagePizza),
			typeof(UncookedCheesePizza),
			typeof(Quiche),
			typeof(MeatPie),
			typeof(SausagePizza),
			typeof(CheesePizza),
			typeof(FruitPie),
			typeof(PeachCobbler),
			typeof(PumpkinPie),
			typeof(EnchantedApple),
			typeof(TribalPaint),
			typeof(GrapesOfWrath),
			typeof(EggBomb),
			typeof(FishSteak),
			typeof(FriedEggs),
			typeof(Ribs),
			typeof(Arrow),
			typeof(Bolt),
			typeof(Kindling),
			typeof(Shaft),
			typeof(ReactiveArmorScroll),
			typeof(ClumsyScroll),
			typeof(CreateFoodScroll),
			typeof(FeeblemindScroll),
			typeof(HealScroll),
			typeof(MagicArrowScroll),
			typeof(NightSightScroll),
			typeof(WeakenScroll),
			typeof(AgilityScroll),
			typeof(CunningScroll),
			typeof(CureScroll),
			typeof(HarmScroll),
			typeof(ProtectionScroll),
			typeof(StrengthScroll),
			typeof(BlessScroll),
			typeof(FireballScroll),
			typeof(MagicLockScroll),
			typeof(PoisonScroll),
			typeof(TelekinisisScroll),
			typeof(TeleportScroll),
			typeof(UnlockScroll),
			typeof(WallOfStoneScroll),
			typeof(ArchCureScroll),
			typeof(ArchProtectionScroll),
			typeof(CurseScroll),
			typeof(FireFieldScroll),
			typeof(GreaterHealScroll),
			typeof(LightningScroll),
			typeof(ManaDrainScroll),
			typeof(RecallScroll),
			typeof(BladeSpiritsScroll),
			typeof(DispelFieldScroll),
			typeof(IncognitoScroll),
			typeof(MagicReflectScroll),
			typeof(MindBlastScroll),
			typeof(ParalyzeScroll),
			typeof(PoisonFieldScroll),
			typeof(SummonCreatureScroll),
			typeof(DispelScroll),
			typeof(EnergyBoltScroll),
			typeof(ExplosionScroll),
			typeof(InvisibilityScroll),
			typeof(MarkScroll),
			typeof(MassCurseScroll),
			typeof(ParalyzeFieldScroll),
			typeof(RevealScroll),
			typeof(ChainLightningScroll),
			typeof(EnergyFieldScroll),
			typeof(GateTravelScroll),
			typeof(ManaVampireScroll),
			typeof(MassDispelScroll),
			typeof(MeteorSwarmScroll),
			typeof(PolymorphScroll),
			typeof(EarthquakeScroll),
			typeof(EnergyVortexScroll),
			typeof(ResurrectionScroll),
			typeof(SummonAirElementalScroll),
			typeof(SummonDaemonScroll),
			typeof(SummonEarthElementalScroll),
			typeof(SummonFireElementalScroll),
			typeof(SummonWaterElementalScroll),
			typeof(AnimateDeadScroll),
			typeof(BloodOathScroll),
			typeof(CorpseSkinScroll),
			typeof(CurseWeaponScroll),
			typeof(EvilOmenScroll),
			typeof(HorrificBeastScroll),
			typeof(LichFormScroll),
			typeof(MindRotScroll),
			typeof(PainSpikeScroll),
			typeof(PoisonStrikeScroll),
			typeof(StrangleScroll),
			typeof(SummonFamiliarScroll),
			typeof(VampiricEmbraceScroll),
			typeof(VengefulSpiritScroll),
			typeof(WitherScroll),
			typeof(WraithFormScroll),
			typeof(Spellbook),
			typeof(NecromancerSpellbook),
			typeof(Runebook),
			typeof(RunicAtlas),
			typeof(KeyRing),
			typeof(Key),
			typeof(Globe),
			typeof(Spyglass),
			typeof(BarrelTap),
			typeof(BarrelHoops),
			typeof(SmithyHammer),
			typeof(Skillet),
			typeof(SewingKit),
			typeof(FletcherTools),
			typeof(SpoonLeft),
			typeof(ForkLeft),
			typeof(Plate),
			typeof(KnifeLeft),
			typeof(Goblet),
			typeof(PewterMug),
			typeof(Clippers),
			typeof(Tongs),
			typeof(SledgeHammer),
			typeof(Saw),
			typeof(Froe),
			typeof(FlourSifter),
			typeof(JointingPlane),
			typeof(MouldingPlane),
			typeof(SmoothingPlane),
			typeof(Hatchet),
			typeof(Candelabra),
			typeof(Scales),
			typeof(Gears),
			typeof(Axle),
			typeof(Springs),
			typeof(AxleGears),
			typeof(ClockParts),
			typeof(Clock),
			typeof(PotionKeg),
			typeof(ClockFrame),
			typeof(MetalContainerEngraver),
			typeof(Hinge),
			typeof(SextantParts),
			typeof(RodOfOrcControl),
			typeof(Beeswax),
			typeof(WoodenBowlOfCarrots),
			typeof(WoodenBowlOfCorn),
			typeof(WoodenBowlOfLettuce),
			typeof(WoodenBowlOfPeas),
			typeof(EmptyPewterBowl),
			typeof(PewterBowlOfCorn),
			typeof(PewterBowlOfLettuce),
			typeof(PewterBowlOfPeas),
			typeof(PewterBowlOfPotatos),
			typeof(WoodenBowlOfStew),
			typeof(WoodenBowlOfTomatoSoup),
			typeof(Chessboard),
			typeof(CheckerBoard),
			typeof(Backgammon),
			typeof(Dices),
			typeof(ContractOfEmployment),
			typeof(BarkeepContract),
			typeof(VendorRentalContract),
			typeof(Wasabi),
			typeof(BentoBox),
			typeof(GreenTeaBasket),
			typeof(MaxxiaScroll),
			typeof(FrenchBread),
			typeof(BowlFlour),
			typeof(DestroyingAngel),
			typeof(SpringWater),
			typeof(PetrafiedWood),
			typeof(HeatingStand),
			typeof(SkinTingeingTincture),
			typeof(TransmutationCauldron),
			typeof(GlassblowingBook),
			typeof(SandMiningBook),
			typeof(Blowpipe),
			typeof(Zychroline),
			typeof(Aetheralate),
			typeof(Neontrium),
			typeof(Oblivionate),
			typeof(Phantomide),
			typeof(Quarkothene),
			typeof(Stygiocarbon),
			typeof(Cryovitrin),
			typeof(Fluxidate),
			typeof(Novaesine),
			typeof(Xenocrylate),
			typeof(Gravitoxane),
			typeof(Eclipsium),
			typeof(Darkspirite),
			typeof(Photoplasmene),
			typeof(Vibranide),
			typeof(Duskenium),
			typeof(Chronodyne),
			typeof(Auroracene),
			typeof(Voidanate),
			typeof(Lumicryne),
			typeof(Prismalium),
			typeof(Etherothal),
			typeof(Pyrolythene),
			typeof(Radiacrylate),
			typeof(Synthionide),
			typeof(Morphaloxane),
			typeof(Astrocyne),
			typeof(Nyxiolate),
			typeof(Spectrovanate),
			typeof(Solvexium),
			typeof(Helionine),
			typeof(Thermodrithium),
			typeof(Arcvaloxate),
			typeof(Cinderathane),
			typeof(Zephyrenium),
			typeof(Kryotoxite),
			typeof(Starshardine),
			typeof(Omniplasium),
			typeof(Nebulifluxate),
			typeof(GraveNylon),
			typeof(Aeroglass),
			typeof(Infinityclay),
			typeof(Bloodglass),
			typeof(DenaturedMorphonite),
			typeof(Energite),
			typeof(FlammablePlasmine),
			typeof(Impervanium),
			typeof(NegativePhocite),
			typeof(OpaqueHydragyon),
			typeof(PositiveEvenium),
			typeof(RefractivePotamite),
			typeof(Schizonite),
			typeof(Thoril),
			typeof(TransparentAurarus),
			typeof(Turbesium),
			typeof(Uranimite),
			typeof(ChargedAcoustesium),
			typeof(ExoticEun),
			typeof(Fibrogen),
			typeof(Flurocite),
			typeof(GaseousAesthogen),
			typeof(HighdensityElectron),
			typeof(MorphicHeteril),
			typeof(Negite),
			typeof(FreshGinger),
			typeof(Pitcher),
			typeof(Hoe),
			typeof(BlackberrySeed),
			typeof(BlackRaspberrySeed),
			typeof(BlueberrySeed),
			typeof(CranberrySeed),
			typeof(PineappleSeed),
			typeof(RedRaspberrySeed),
			typeof(BlackRoseSeed),
			typeof(DandelionSeed),
			typeof(IrishRoseSeed),
			typeof(PansySeed),
			typeof(PinkCarnationSeed),
			typeof(PoppySeed),
			typeof(RedRoseSeed),
			typeof(SnapdragonSeed),
			typeof(SpiritRoseSeed),
			typeof(WhiteRoseSeed),
			typeof(YellowRoseSeed),
			typeof(CottonSeed),
			typeof(FlaxSeed),
			typeof(HaySeed),
			typeof(OatsSeed),
			typeof(RiceSeed),
			typeof(SugarcaneSeed),
			typeof(WheatSeed),
			typeof(GarlicSeed),
			typeof(TanGingerSeed),
			typeof(GinsengSeed),
			typeof(MandrakeSeed),
			typeof(NightshadeSeed),
			typeof(RedMushroomSeed),
			typeof(TanMushroomSeed),
			typeof(BitterHopsSeed),
			typeof(ElvenHopsSeed),
			typeof(SnowHopsSeed),
			typeof(SweetHopsSeed),
			typeof(CornSeed),
			typeof(FieldCornSeed),
			typeof(SunFlowerSeed),
			typeof(TeaSeed),
			typeof(BananaSeed),
			typeof(CoconutSeed),
			typeof(DateSeed),
			typeof(MiniAlmondSeed),
			typeof(MiniAppleSeed),
			typeof(MiniApricotSeed),
			typeof(MiniAvocadoSeed),
			typeof(MiniCherrySeed),
			typeof(MiniCocoaSeed),
			typeof(MiniCoffeeSeed),
			typeof(MiniGrapefruitSeed),
			typeof(MiniKiwiSeed),
			typeof(MiniMangoSeed),
			typeof(MiniOrangeSeed),
			typeof(MiniPeachSeed),
			typeof(MiniPearSeed),
			typeof(MiniPistacioSeed),
			typeof(MiniPomegranateSeed),
			typeof(SmallBananaSeed),
			typeof(AsparagusSeed),
			typeof(BeetSeed),
			typeof(BroccoliSeed),
			typeof(CabbageSeed),
			typeof(CarrotSeed),
			typeof(CauliflowerSeed),
			typeof(CelerySeed),
			typeof(EggplantSeed),
			typeof(GreenBeanSeed),
			typeof(LettuceSeed),
			typeof(OnionSeed),
			typeof(PeanutSeed),
			typeof(PeasSeed),
			typeof(PotatoSeed),
			typeof(RadishSeed),
			typeof(SnowPeasSeed),
			typeof(SoySeed),
			typeof(SpinachSeed),
			typeof(StrawberrySeed),
			typeof(SweetPotatoSeed),
			typeof(TurnipSeed),
			typeof(ChiliPepperSeed),
			typeof(CucumberSeed),
			typeof(GreenPepperSeed),
			typeof(OrangePepperSeed),
			typeof(RedPepperSeed),
			typeof(TomatoSeed),
			typeof(YellowPepperSeed),
			typeof(CantaloupeSeed),
			typeof(GreenSquashSeed),
			typeof(HoneydewMelonSeed),
			typeof(PumpkinSeed),
			typeof(SquashSeed),
			typeof(WatermelonSeed),
			typeof(AppleSeed),
			typeof(BananaTreeSeed),
			typeof(CantaloupeVineSeed),
			typeof(CoconutTreeSeed),
			typeof(DateTreeSeed),
			typeof(GrapeSeed),
			typeof(LemonSeed),
			typeof(LimeSeed),
			typeof(PeachSeed),
			typeof(PearSeed),
			typeof(SquashVineSeed),
			typeof(WatermelonVineSeed),
			typeof(BuildersHammer),
			typeof(CheeseAgingBarrel),
			typeof(PeaceableWoodenFence),
			typeof(MarijuanaSeeds),
			typeof(TaintedSeeds),
			typeof(SilverSaplingSeed),
			typeof(SeedOfLife),
			typeof(SeedOfRenewal),
			typeof(AbyssChivesFruit),
			typeof(aggearangFruit),
			typeof(agleatainFruit),
			typeof(ameoyoteFruit),
			typeof(AngelRootFruit),
			typeof(AngelTurnipFruit),
			typeof(ArcticParsnipFruit),
			typeof(AshLycheeFruit),
			typeof(AshRootFruit),
			typeof(AutumnCherryFruit),
			typeof(AutumnPomegranateFruit),
			typeof(BitterDurianFruit),
			typeof(BittersweetChivesFruit),
			typeof(BlackChoyFruit),
			typeof(blattiovesFruit),
			typeof(blearelFruit),
			typeof(BlumbFruit),
			typeof(bosheaShootFruit),
			typeof(brafulalFruit),
			typeof(brongerFruit),
			typeof(BushCerimanFruit),
			typeof(BushSpinachFruit),
			typeof(CandyMorindaFruit),
			typeof(CaveAsparagusFruit),
			typeof(CavePersimmonFruit),
			typeof(CavernMangosteenFruit),
			typeof(chigionutFruit),
			typeof(chummionachFruit),
			typeof(ciarryFruit),
			typeof(CinderGingerFruit),
			typeof(CliffNectarineFruit),
			typeof(crennealeryFruit),
			typeof(criarianFruit),
			typeof(darantFruit),
			typeof(DaydreamPommeracFruit),
			typeof(DesertPlumFruit),
			typeof(DesertRowanFruit),
			typeof(DessertBroccoliFruit),
			typeof(DessertTomatoFruit),
			typeof(DewKiwiFruit),
			typeof(DewPawpawFruit),
			typeof(dimquatFruit),
			typeof(diowanFruit),
			typeof(DragoLimeFruit),
			typeof(DrakeLentilFruit),
			typeof(DrakeMangoFruit),
			typeof(eacketFruit),
			typeof(eacotFruit),
			typeof(earolaFruit),
			typeof(EasternBacuriFruit),
			typeof(eawanFruit),
			typeof(echocadoFruit),
			typeof(ElephantBreadnutFruit),
			typeof(EmberLaurelFruit),
			typeof(EmberLettuceFruit),
			typeof(FalseAlmondFruit),
			typeof(fliavesFruit),
			typeof(FluxxFruit),
			typeof(fucrucotFruit),
			typeof(fudishFruit),
			typeof(fushewFruit),
			typeof(geweodineFruit),
			typeof(gigliachokeFruit),
			typeof(girinFruit),
			typeof(glissidillaFruit),
			typeof(GoldenRocketFruit),
			typeof(grandaFruit),
			typeof(gropioveFruit),
			typeof(GroundPearFruit),
			typeof(grutatoFruit),
			typeof(HairyTomatoFruit),
			typeof(HateCalamansiFruit),
			typeof(HazelLimeFruit),
			typeof(hialoupeFruit),
			typeof(hiorolaFruit),
			typeof(iaconaFruit),
			typeof(IceRocketFruit),
			typeof(iddiochokeFruit),
			typeof(imberFruit),
			typeof(ingeFruit),
			typeof(intineFruit),
			typeof(ippiocressFruit),
			typeof(ittianaFruit),
			typeof(jeorraFruit),
			typeof(jigreapawFruit),
			typeof(jochiniFruit),
			typeof(kledamiaFruit),
			typeof(kleopeFruit),
			typeof(kraccaleryFruit),
			typeof(krevaFruit),
			typeof(LillypillyFruit),
			typeof(LoveKumquatFruit),
			typeof(LoveZucchiniFruit),
			typeof(MageCherryFruit),
			typeof(MageDateFruit),
			typeof(MellowGourdFruit),
			typeof(MoonPumpkinFruit),
			typeof(moyiarlanFruit),
			typeof(MutantLemonFruit),
			typeof(MysteryFruit),
			typeof(MysteryGuavaFruit),
			typeof(MysteryOrangeFruit),
			typeof(NativeRambutanFruit),
			typeof(NightCabbageFruit),
			typeof(NightmareSaguaroFruit),
			typeof(ocanateFruit),
			typeof(OceanMuscadineFruit),
			typeof(omondFruit),
			typeof(otilFruit),
			typeof(PeaceAmaranthFruit),
			typeof(PeaceDateFruit),
			typeof(PeaceNectarineFruit),
			typeof(phecceayoteFruit),
			typeof(piokinFruit),
			typeof(probbacheeFruit),
			typeof(puchiniFruit),
			typeof(PygmyOrangeFruit),
			typeof(qekliatilloFruit),
			typeof(RainLaurelFruit),
			typeof(RainPommeracFruit),
			typeof(rephoneFruit),
			typeof(satilFruit),
			typeof(siheonachFruit),
			typeof(SilverFruit),
			typeof(slirindFruit),
			typeof(slomeloFruit),
			typeof(SmellyCarrotFruit),
			typeof(SourAmaranthFruit),
			typeof(StormBrambleFruit),
			typeof(striachiniFruit),
			typeof(strondaFruit),
			typeof(SwampNectarineFruit),
			typeof(SweetBoquilaFruit),
			typeof(TigerBeanFruit),
			typeof(TropicalCherryFruit),
			typeof(unaFruit),
			typeof(uyerdFruit),
			typeof(veapeFruit),
			typeof(VoidBrambleFruit),
			typeof(VoidOkraFruit),
			typeof(VoidPulasanFruit),
			typeof(VoidSproutFruit),
			typeof(vrecequilaFruit),
			typeof(vropperrotFruit),
			typeof(vuveFruit),
			typeof(WinterCoconutFruit),
			typeof(WonderRambutanFruit),
			typeof(wriggumondFruit),
			typeof(XeenBerryFruit),
			typeof(xekraFruit),
			typeof(xemeloFruit),
			typeof(zanioperFruit),
			typeof(ziongerFruit),			
			typeof(Bottle)
        };

        // ** New: pool of crafting skills to choose from **
        private static readonly SkillName[] SkillPool =
        {
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
            SkillName.Fletching,
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
            SkillName.Fletching,
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
            SkillName.Fletching,
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
            SkillName.Fletching,
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
            SkillName.Fletching,
            SkillName.Blacksmith, 
			SkillName.Tailoring,
            SkillName.Carpentry,  
			SkillName.Tinkering,
            SkillName.Alchemy,    
			SkillName.Cooking,
			SkillName.Alchemy,
			SkillName.Anatomy,
			SkillName.AnimalLore,
			SkillName.AnimalTaming,
			SkillName.Archery,
			SkillName.ArmsLore,
			SkillName.Begging,
			SkillName.Blacksmith,
			SkillName.Bushido,
			SkillName.Camping,
			SkillName.Carpentry,
			SkillName.Cartography,
			SkillName.Chivalry,
			SkillName.Cooking,
			SkillName.DetectHidden,
			SkillName.Discordance,
			SkillName.EvalInt,
			SkillName.Fencing,
			SkillName.Fishing,
			SkillName.Fletching,
			SkillName.Focus,
			SkillName.Forensics,
			SkillName.Healing,
			SkillName.Herding,
			SkillName.Hiding,
			SkillName.Imbuing,
			SkillName.Inscribe,
			SkillName.ItemID,
			SkillName.Lockpicking,
			SkillName.Lumberjacking,
			SkillName.Macing,
			SkillName.MagicResist,
			SkillName.Meditation,
			SkillName.Mining,
			SkillName.Musicianship,
			SkillName.Mysticism,
			SkillName.Necromancy,
			SkillName.Ninjitsu,
			SkillName.Parry,
			SkillName.Peacemaking,
			SkillName.Poisoning,
			SkillName.Provocation,
			SkillName.RemoveTrap,
			SkillName.Snooping,
			SkillName.Spellweaving,
			SkillName.SpiritSpeak,
			SkillName.Stealing,
			SkillName.Stealth,
			SkillName.Swords,
			SkillName.Tactics,
			SkillName.Tailoring,
			SkillName.TasteID,
			SkillName.Throwing,
			SkillName.Tinkering,
			SkillName.Tracking,
			SkillName.Veterinary,
			SkillName.Wrestling,			
            SkillName.Fletching			
        };

        private static BlueprintTarget PickRandomTarget() =>
            ProductPool[Utility.Random(ProductPool.Length)];

        private static IEnumerable<MaterialEntry> PickRandomRecipe()
        {
            int n = Utility.RandomMinMax(2, 6);
            var result = new List<MaterialEntry>();
            var shuffled = MaterialPool.OrderBy(_ => Utility.Random(10000)).Take(n);
            foreach (var t in shuffled)
                result.Add(new MaterialEntry(t, Utility.RandomMinMax(1, 10)));
            return result;
        }

        private static (SkillName Skill, double Value) PickRandomSkillRequirement()
        {
            var skill = SkillPool[Utility.Random(SkillPool.Length)];
            var val   = Utility.RandomMinMax(20, 200);
            return (skill, val);
        }

        // ─── ❼ persistence ─────────────────────────────────────────────────

        public CraftingBlueprint(Serial s) : base(s) { }

        public override void Serialize(GenericWriter w)
        {
            base.Serialize(w);
            w.Write(1); // version

            _product.Serialize(w);

            w.Write(_mats.Count);
            foreach (var m in _mats) m.Serialize(w);

            w.Write(_original);
            w.Write(_runsRemaining);

            // serialize new fields
            w.Write((int)_requiredSkill);
            w.Write(_requiredSkillValue);
        }

        public override void Deserialize(GenericReader r)
        {
            base.Deserialize(r);
            int version = r.ReadInt();

            _product       = BlueprintTarget.Deserialize(r);

            int count      = r.ReadInt();
            _mats          = new List<MaterialEntry>();
            for (int i = 0; i < count; ++i)
                _mats.Add(MaterialEntry.Deserialize(r));

            _original      = r.ReadBool();
            _runsRemaining = r.ReadInt();

            // deserialize new fields
            _requiredSkill      = (SkillName)r.ReadInt();
            _requiredSkillValue = r.ReadDouble();

            Name = BuildName();
        }

        // ─── ❽ optional GM helper command ─────────────────────────────────

        public static void Initialize()
        {
            CommandSystem.Register("SpawnBP", AccessLevel.GameMaster, SpawnBP_OnCommand);
        }

        // Usage:
        //   [SpawnBP Swords 120 20 orig]
        private static void SpawnBP_OnCommand(CommandEventArgs e)
        {
            var gm = e.Mobile;
            if (e.Arguments.Length < 2)
            {
                gm.SendMessage("Format: SpawnBP <skillName> <value> [runs|orig]");
                return;
            }

            // parse the *PRODUCT* args (in this example, we're spawning a PowerScroll)
            var skillArg   = (SkillName)Enum.Parse(typeof(SkillName), e.Arguments[0], true);
            var valueArg   = Convert.ToDouble(e.Arguments[1]);

            var isOriginal = e.Arguments.Length > 2 && e.Arguments[2].Equals("orig", StringComparison.OrdinalIgnoreCase);
            var runs       = isOriginal 
                                ? 0 
                                : (e.Arguments.Length > 2 
                                    ? Utility.ToInt32(e.Arguments[2]) 
                                    : 20);

            // now use locals for the out‐params
            SkillName pickedSkill;
            double   pickedValue;
            var bp = new CraftingBlueprint(
                new BlueprintTarget(typeof(PowerScroll), skillArg, valueArg),
                null,
                isOriginal,
                runs,
                out pickedSkill,
                out pickedValue
            );

            gm.AddToBackpack(bp);
            gm.SendMessage("Blueprint created and placed in your pack.");
        }
    }
}
